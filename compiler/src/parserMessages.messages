module_: WHILE

Unexpected keyword at top-level
Was expecting a function or global variable or parameter declaration

module_: SHARP WHILE

Unexpected keyword
Was expecting an attribute name or opening bracket

module_: SHARP LBRACKET WHILE

Unexpected keyword
Was expecting an attribute name

module_: SHARP LBRACKET EXPORT RBRACE
##
## Ends in an error in state: 17.
##
## top_annotation -> SHARP LBRACKET struct_annot . RBRACKET [ WHILE UNDERSCORE STACK SHARP REG QUESTIONMARK NID LPAREN LBRACKET INLINE IF GLOBAL FOR FN EXPORT ARRAYINIT ]
##
## The known suffix of the stack is as follows:
## SHARP LBRACKET struct_annot
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 22, spurious reduction of production option(attribute) ->
## In state 39, spurious reduction of production annotation -> annotationlabel option(attribute)
## In state 31, spurious reduction of production separated_nonempty_list(COMMA,annotation) -> annotation
## In state 19, spurious reduction of production loption(separated_nonempty_list(COMMA,annotation)) -> separated_nonempty_list(COMMA,annotation)
## In state 20, spurious reduction of production struct_annot -> loption(separated_nonempty_list(COMMA,annotation))
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: SHARP EXPORT T_U8

Unexpected type keyword
Was expecting attribute arguments

module_: SHARP EXPORT EQ WHILE
module_: SHARP EXPORT EQ MINUS WHILE

Unexpected keyword
Was expecting attribute value

module_: SHARP EXPORT EQ LBRACE WHILE

Unexpected keyword
Was expecting structure field

module_: SHARP EXPORT EQ LBRACE EXPORT RBRACKET

Unexpected closing bracket
Was expecting closing brace

module_: SHARP LBRACKET EXPORT WHILE
##
## Ends in an error in state: 31.
##
## separated_nonempty_list(COMMA,annotation) -> annotation . [ RBRACKET RBRACE ]
## separated_nonempty_list(COMMA,annotation) -> annotation . COMMA separated_nonempty_list(COMMA,annotation) [ RBRACKET RBRACE ]
##
## The known suffix of the stack is as follows:
## annotation
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 22, spurious reduction of production option(attribute) ->
## In state 39, spurious reduction of production annotation -> annotationlabel option(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: SHARP LBRACKET EXPORT COMMA WHILE

Unexpected keyword
Was expecting attribute name

module_: PARAM WHILE

Unexpected keyword
Was expecting parameter type

module_: T_U128 WHILE
##
## Ends in an error in state: 43.
##
## ptype_r -> utype . [ RPAREN NID LBRACE COMMA ]
## ptype_r -> utype . LBRACKET pexpr RBRACKET [ RPAREN NID LBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## utype
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: T_U128 LBRACKET WHILE
##
## Ends in an error in state: 44.
##
## ptype_r -> utype LBRACKET . pexpr RBRACKET [ RPAREN NID LBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## utype LBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: T_U128 LBRACKET SHARP WHILE
module_: T_U128 LBRACKET SHARP NID WHILE
module_: T_U128 LBRACKET MINUS WHILE
module_: T_U128 LBRACKET MINUS SVSIZE WHILE
module_: T_U128 LBRACKET LPAREN WHILE
module_: T_U128 LBRACKET BANG WHILE
module_: T_U128 LBRACKET BANG SVSIZE WHILE
module_: T_U128 LBRACKET NID LPAREN WHILE
module_: T_U128 LBRACKET SHARP NID LPAREN WHILE

## For some of these cases, it would be cleaner to specialize the grammar of
## compile-time expressions
# In particular avoiding primitive calls there

Unexpected keyword
Was expecting array size

module_: T_U128 LBRACKET NID WHILE

Unexpected keyword
Was expecting end of array size expression
Did you forget a closing bracket ?

module_: T_U128 NID EQ LBRACE FALSE WHILE

Unexpected keyword
Was expecting end of expression
Did you forget a closing brace ?

module_: T_U128 LBRACKET NID STAR WHILE

Unexpected keyword
Was expecting end of array size expression

module_: T_U128 LBRACKET NID STAR SVSIZE WHILE
##
## Ends in an error in state: 71.
##
## pexpr_r -> pexpr STAR castop . pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## pexpr STAR castop
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: T_U128 LBRACKET LPAREN T_U128 RPAREN WHILE
##
## Ends in an error in state: 73.
##
## pexpr_r -> option(parens(utype)) . LBRACKET var option(mem_ofs) RBRACKET [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## option(parens(utype))
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: T_U128 LBRACKET LBRACKET WHILE
##
## Ends in an error in state: 74.
##
## pexpr_r -> option(parens(utype)) LBRACKET . var option(mem_ofs) RBRACKET [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## option(parens(utype)) LBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: T_U128 LBRACKET LBRACKET NID WHILE
##
## Ends in an error in state: 75.
##
## pexpr_r -> option(parens(utype)) LBRACKET var . option(mem_ofs) RBRACKET [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## option(parens(utype)) LBRACKET var
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: T_U128 LBRACKET LBRACKET NID PLUS WHILE
##
## Ends in an error in state: 76.
##
## option(mem_ofs) -> PLUS . pexpr [ RBRACKET ]
##
## The known suffix of the stack is as follows:
## PLUS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: T_U128 LBRACKET LBRACKET NID PLUS FALSE WHILE
##
## Ends in an error in state: 77.
##
## option(mem_ofs) -> PLUS pexpr . [ RBRACKET ]
## pexpr_r -> pexpr . AMPAMP pexpr [ STAR SLASH ROR ROL RBRACKET QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PIPEPIPE pexpr [ STAR SLASH ROR ROL RBRACKET QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PLUS castop pexpr [ STAR SLASH ROR ROL RBRACKET QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . MINUS castop pexpr [ STAR SLASH ROR ROL RBRACKET QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . STAR castop pexpr [ STAR SLASH ROR ROL RBRACKET QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . SLASH castop pexpr [ STAR SLASH ROR ROL RBRACKET QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PERCENT castop pexpr [ STAR SLASH ROR ROL RBRACKET QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . AMP castop pexpr [ STAR SLASH ROR ROL RBRACKET QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PIPE castop pexpr [ STAR SLASH ROR ROL RBRACKET QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . HAT castop pexpr [ STAR SLASH ROR ROL RBRACKET QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . LTLT castop pexpr [ STAR SLASH ROR ROL RBRACKET QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . GTGT castop pexpr [ STAR SLASH ROR ROL RBRACKET QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . ROR castop pexpr [ STAR SLASH ROR ROL RBRACKET QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . ROL castop pexpr [ STAR SLASH ROR ROL RBRACKET QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . EQEQ castop pexpr [ STAR SLASH ROR ROL RBRACKET QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . BANGEQ castop pexpr [ STAR SLASH ROR ROL RBRACKET QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . LT castop pexpr [ STAR SLASH ROR ROL RBRACKET QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . LE castop pexpr [ STAR SLASH ROR ROL RBRACKET QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . GT castop pexpr [ STAR SLASH ROR ROL RBRACKET QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . GE castop pexpr [ STAR SLASH ROR ROL RBRACKET QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . QUESTIONMARK pexpr COLON pexpr [ STAR SLASH ROR ROL RBRACKET QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## PLUS pexpr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: T_U128 LBRACKET NID SLASH WHILE
##
## Ends in an error in state: 78.
##
## pexpr_r -> pexpr SLASH . castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## pexpr SLASH
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: T_U128 LBRACKET NID SLASH SVSIZE WHILE
##
## Ends in an error in state: 79.
##
## pexpr_r -> pexpr SLASH castop . pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## pexpr SLASH castop
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: T_U128 LBRACKET NID ROR WHILE
##
## Ends in an error in state: 81.
##
## pexpr_r -> pexpr ROR . castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## pexpr ROR
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: T_U128 LBRACKET NID ROR SVSIZE WHILE
##
## Ends in an error in state: 82.
##
## pexpr_r -> pexpr ROR castop . pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## pexpr ROR castop
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: T_U128 LBRACKET NID ROR FALSE WHILE
##
## Ends in an error in state: 83.
##
## pexpr_r -> pexpr . AMPAMP pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PIPEPIPE pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PLUS castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . MINUS castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . STAR castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . SLASH castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PERCENT castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . AMP castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PIPE castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . HAT castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . LTLT castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . GTGT castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . ROR castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr ROR castop pexpr . [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . ROL castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . EQEQ castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . BANGEQ castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . LT castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . LE castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . GT castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . GE castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . QUESTIONMARK pexpr COLON pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## pexpr ROR castop pexpr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: T_U128 LBRACKET NID PLUS WHILE
##
## Ends in an error in state: 84.
##
## pexpr_r -> pexpr PLUS . castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## pexpr PLUS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: T_U128 LBRACKET NID PLUS SVSIZE WHILE
##
## Ends in an error in state: 85.
##
## pexpr_r -> pexpr PLUS castop . pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## pexpr PLUS castop
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: T_U128 LBRACKET NID PLUS FALSE WHILE
##
## Ends in an error in state: 86.
##
## pexpr_r -> pexpr . AMPAMP pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PIPEPIPE pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PLUS castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr PLUS castop pexpr . [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . MINUS castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . STAR castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . SLASH castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PERCENT castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . AMP castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PIPE castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . HAT castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . LTLT castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . GTGT castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . ROR castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . ROL castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . EQEQ castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . BANGEQ castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . LT castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . LE castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . GT castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . GE castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . QUESTIONMARK pexpr COLON pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## pexpr PLUS castop pexpr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: T_U128 LBRACKET NID PERCENT WHILE
##
## Ends in an error in state: 87.
##
## pexpr_r -> pexpr PERCENT . castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## pexpr PERCENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: T_U128 LBRACKET NID PERCENT SVSIZE WHILE
##
## Ends in an error in state: 88.
##
## pexpr_r -> pexpr PERCENT castop . pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## pexpr PERCENT castop
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: T_U128 LBRACKET NID MINUS WHILE
##
## Ends in an error in state: 90.
##
## pexpr_r -> pexpr MINUS . castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## pexpr MINUS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: T_U128 LBRACKET NID MINUS SVSIZE WHILE
##
## Ends in an error in state: 91.
##
## pexpr_r -> pexpr MINUS castop . pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## pexpr MINUS castop
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: T_U128 LBRACKET NID MINUS FALSE WHILE
##
## Ends in an error in state: 92.
##
## pexpr_r -> pexpr . AMPAMP pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PIPEPIPE pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PLUS castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . MINUS castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr MINUS castop pexpr . [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . STAR castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . SLASH castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PERCENT castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . AMP castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PIPE castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . HAT castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . LTLT castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . GTGT castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . ROR castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . ROL castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . EQEQ castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . BANGEQ castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . LT castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . LE castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . GT castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . GE castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . QUESTIONMARK pexpr COLON pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## pexpr MINUS castop pexpr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: T_U128 LBRACKET NID ROL WHILE
##
## Ends in an error in state: 93.
##
## pexpr_r -> pexpr ROL . castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## pexpr ROL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: T_U128 LBRACKET NID ROL SVSIZE WHILE
##
## Ends in an error in state: 94.
##
## pexpr_r -> pexpr ROL castop . pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## pexpr ROL castop
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: T_U128 LBRACKET NID ROL FALSE WHILE
##
## Ends in an error in state: 95.
##
## pexpr_r -> pexpr . AMPAMP pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PIPEPIPE pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PLUS castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . MINUS castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . STAR castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . SLASH castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PERCENT castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . AMP castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PIPE castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . HAT castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . LTLT castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . GTGT castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . ROR castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . ROL castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr ROL castop pexpr . [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . EQEQ castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . BANGEQ castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . LT castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . LE castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . GT castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . GE castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . QUESTIONMARK pexpr COLON pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## pexpr ROL castop pexpr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: T_U128 LBRACKET NID QUESTIONMARK WHILE
##
## Ends in an error in state: 96.
##
## pexpr_r -> pexpr QUESTIONMARK . pexpr COLON pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## pexpr QUESTIONMARK
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: T_U128 LBRACKET NID QUESTIONMARK FALSE WHILE
##
## Ends in an error in state: 97.
##
## pexpr_r -> pexpr . AMPAMP pexpr [ STAR SLASH ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PIPEPIPE pexpr [ STAR SLASH ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PLUS castop pexpr [ STAR SLASH ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . MINUS castop pexpr [ STAR SLASH ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . STAR castop pexpr [ STAR SLASH ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . SLASH castop pexpr [ STAR SLASH ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PERCENT castop pexpr [ STAR SLASH ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . AMP castop pexpr [ STAR SLASH ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PIPE castop pexpr [ STAR SLASH ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . HAT castop pexpr [ STAR SLASH ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . LTLT castop pexpr [ STAR SLASH ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . GTGT castop pexpr [ STAR SLASH ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . ROR castop pexpr [ STAR SLASH ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . ROL castop pexpr [ STAR SLASH ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . EQEQ castop pexpr [ STAR SLASH ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . BANGEQ castop pexpr [ STAR SLASH ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . LT castop pexpr [ STAR SLASH ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . LE castop pexpr [ STAR SLASH ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . GT castop pexpr [ STAR SLASH ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . GE castop pexpr [ STAR SLASH ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . QUESTIONMARK pexpr COLON pexpr [ STAR SLASH ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr QUESTIONMARK pexpr . COLON pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## pexpr QUESTIONMARK pexpr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: T_U128 LBRACKET NID PIPEPIPE WHILE
##
## Ends in an error in state: 98.
##
## pexpr_r -> pexpr PIPEPIPE . pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## pexpr PIPEPIPE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: T_U128 LBRACKET NID PIPEPIPE FALSE WHILE
##
## Ends in an error in state: 99.
##
## pexpr_r -> pexpr . AMPAMP pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PIPEPIPE pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr PIPEPIPE pexpr . [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PLUS castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . MINUS castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . STAR castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . SLASH castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PERCENT castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . AMP castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PIPE castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . HAT castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . LTLT castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . GTGT castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . ROR castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . ROL castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . EQEQ castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . BANGEQ castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . LT castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . LE castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . GT castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . GE castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . QUESTIONMARK pexpr COLON pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## pexpr PIPEPIPE pexpr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: T_U128 LBRACKET NID PIPE WHILE
##
## Ends in an error in state: 100.
##
## pexpr_r -> pexpr PIPE . castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## pexpr PIPE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: T_U128 LBRACKET NID PIPE SVSIZE WHILE
##
## Ends in an error in state: 101.
##
## pexpr_r -> pexpr PIPE castop . pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## pexpr PIPE castop
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: T_U128 LBRACKET NID PIPE FALSE WHILE
##
## Ends in an error in state: 102.
##
## pexpr_r -> pexpr . AMPAMP pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PIPEPIPE pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PLUS castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . MINUS castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . STAR castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . SLASH castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PERCENT castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . AMP castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PIPE castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr PIPE castop pexpr . [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . HAT castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . LTLT castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . GTGT castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . ROR castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . ROL castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . EQEQ castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . BANGEQ castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . LT castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . LE castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . GT castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . GE castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . QUESTIONMARK pexpr COLON pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## pexpr PIPE castop pexpr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: T_U128 LBRACKET NID LTLT WHILE
##
## Ends in an error in state: 103.
##
## pexpr_r -> pexpr LTLT . castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## pexpr LTLT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: T_U128 LBRACKET NID LTLT SVSIZE WHILE
##
## Ends in an error in state: 104.
##
## pexpr_r -> pexpr LTLT castop . pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## pexpr LTLT castop
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: T_U128 LBRACKET NID LTLT FALSE WHILE
##
## Ends in an error in state: 105.
##
## pexpr_r -> pexpr . AMPAMP pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PIPEPIPE pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PLUS castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . MINUS castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . STAR castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . SLASH castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PERCENT castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . AMP castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PIPE castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . HAT castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . LTLT castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr LTLT castop pexpr . [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . GTGT castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . ROR castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . ROL castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . EQEQ castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . BANGEQ castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . LT castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . LE castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . GT castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . GE castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . QUESTIONMARK pexpr COLON pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## pexpr LTLT castop pexpr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: T_U128 LBRACKET NID HAT WHILE
##
## Ends in an error in state: 106.
##
## pexpr_r -> pexpr HAT . castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## pexpr HAT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: T_U128 LBRACKET NID HAT SVSIZE WHILE
##
## Ends in an error in state: 107.
##
## pexpr_r -> pexpr HAT castop . pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## pexpr HAT castop
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: T_U128 LBRACKET NID HAT FALSE WHILE
##
## Ends in an error in state: 108.
##
## pexpr_r -> pexpr . AMPAMP pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PIPEPIPE pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PLUS castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . MINUS castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . STAR castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . SLASH castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PERCENT castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . AMP castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PIPE castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . HAT castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr HAT castop pexpr . [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . LTLT castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . GTGT castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . ROR castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . ROL castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . EQEQ castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . BANGEQ castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . LT castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . LE castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . GT castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . GE castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . QUESTIONMARK pexpr COLON pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## pexpr HAT castop pexpr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: T_U128 LBRACKET NID GTGT WHILE
##
## Ends in an error in state: 109.
##
## pexpr_r -> pexpr GTGT . castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## pexpr GTGT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: T_U128 LBRACKET NID GTGT SVSIZE WHILE
##
## Ends in an error in state: 110.
##
## pexpr_r -> pexpr GTGT castop . pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## pexpr GTGT castop
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: T_U128 LBRACKET NID GTGT FALSE WHILE
##
## Ends in an error in state: 111.
##
## pexpr_r -> pexpr . AMPAMP pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PIPEPIPE pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PLUS castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . MINUS castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . STAR castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . SLASH castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PERCENT castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . AMP castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PIPE castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . HAT castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . LTLT castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . GTGT castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr GTGT castop pexpr . [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . ROR castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . ROL castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . EQEQ castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . BANGEQ castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . LT castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . LE castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . GT castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . GE castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . QUESTIONMARK pexpr COLON pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## pexpr GTGT castop pexpr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: T_U128 LBRACKET NID AMP WHILE
##
## Ends in an error in state: 112.
##
## pexpr_r -> pexpr AMP . castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## pexpr AMP
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: T_U128 LBRACKET NID AMP SVSIZE WHILE
##
## Ends in an error in state: 113.
##
## pexpr_r -> pexpr AMP castop . pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## pexpr AMP castop
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: T_U128 LBRACKET NID AMP FALSE WHILE
##
## Ends in an error in state: 114.
##
## pexpr_r -> pexpr . AMPAMP pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PIPEPIPE pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PLUS castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . MINUS castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . STAR castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . SLASH castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PERCENT castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . AMP castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr AMP castop pexpr . [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PIPE castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . HAT castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . LTLT castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . GTGT castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . ROR castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . ROL castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . EQEQ castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . BANGEQ castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . LT castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . LE castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . GT castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . GE castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . QUESTIONMARK pexpr COLON pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## pexpr AMP castop pexpr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: T_U128 LBRACKET NID LT WHILE
##
## Ends in an error in state: 115.
##
## pexpr_r -> pexpr LT . castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## pexpr LT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: T_U128 LBRACKET NID LT SVSIZE WHILE
##
## Ends in an error in state: 116.
##
## pexpr_r -> pexpr LT castop . pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## pexpr LT castop
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: T_U128 LBRACKET NID LT FALSE WHILE
##
## Ends in an error in state: 117.
##
## pexpr_r -> pexpr . AMPAMP pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PIPEPIPE pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PLUS castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . MINUS castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . STAR castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . SLASH castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PERCENT castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . AMP castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PIPE castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . HAT castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . LTLT castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . GTGT castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . ROR castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . ROL castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . EQEQ castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . BANGEQ castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . LT castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr LT castop pexpr . [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . LE castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . GT castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . GE castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . QUESTIONMARK pexpr COLON pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## pexpr LT castop pexpr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: T_U128 LBRACKET NID LE WHILE
##
## Ends in an error in state: 118.
##
## pexpr_r -> pexpr LE . castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## pexpr LE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: T_U128 LBRACKET NID LE SVSIZE WHILE
##
## Ends in an error in state: 119.
##
## pexpr_r -> pexpr LE castop . pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## pexpr LE castop
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: T_U128 LBRACKET NID LE FALSE WHILE
##
## Ends in an error in state: 120.
##
## pexpr_r -> pexpr . AMPAMP pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PIPEPIPE pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PLUS castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . MINUS castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . STAR castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . SLASH castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PERCENT castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . AMP castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PIPE castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . HAT castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . LTLT castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . GTGT castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . ROR castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . ROL castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . EQEQ castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . BANGEQ castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . LT castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . LE castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr LE castop pexpr . [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . GT castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . GE castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . QUESTIONMARK pexpr COLON pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## pexpr LE castop pexpr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: T_U128 LBRACKET NID GT WHILE
##
## Ends in an error in state: 121.
##
## pexpr_r -> pexpr GT . castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## pexpr GT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: T_U128 LBRACKET NID GT SVSIZE WHILE
##
## Ends in an error in state: 122.
##
## pexpr_r -> pexpr GT castop . pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## pexpr GT castop
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: T_U128 LBRACKET NID GT FALSE WHILE
##
## Ends in an error in state: 123.
##
## pexpr_r -> pexpr . AMPAMP pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PIPEPIPE pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PLUS castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . MINUS castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . STAR castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . SLASH castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PERCENT castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . AMP castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PIPE castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . HAT castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . LTLT castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . GTGT castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . ROR castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . ROL castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . EQEQ castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . BANGEQ castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . LT castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . LE castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . GT castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr GT castop pexpr . [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . GE castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . QUESTIONMARK pexpr COLON pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## pexpr GT castop pexpr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: T_U128 LBRACKET NID GE WHILE
##
## Ends in an error in state: 124.
##
## pexpr_r -> pexpr GE . castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## pexpr GE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: T_U128 LBRACKET NID GE SVSIZE WHILE
##
## Ends in an error in state: 125.
##
## pexpr_r -> pexpr GE castop . pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## pexpr GE castop
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: T_U128 LBRACKET NID GE FALSE WHILE
##
## Ends in an error in state: 126.
##
## pexpr_r -> pexpr . AMPAMP pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PIPEPIPE pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PLUS castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . MINUS castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . STAR castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . SLASH castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PERCENT castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . AMP castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PIPE castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . HAT castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . LTLT castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . GTGT castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . ROR castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . ROL castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . EQEQ castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . BANGEQ castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . LT castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . LE castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . GT castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . GE castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr GE castop pexpr . [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . QUESTIONMARK pexpr COLON pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## pexpr GE castop pexpr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: T_U128 LBRACKET NID EQEQ WHILE
##
## Ends in an error in state: 127.
##
## pexpr_r -> pexpr EQEQ . castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## pexpr EQEQ
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: T_U128 LBRACKET NID EQEQ SVSIZE WHILE
##
## Ends in an error in state: 128.
##
## pexpr_r -> pexpr EQEQ castop . pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## pexpr EQEQ castop
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: T_U128 LBRACKET NID EQEQ FALSE WHILE
##
## Ends in an error in state: 129.
##
## pexpr_r -> pexpr . AMPAMP pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PIPEPIPE pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PLUS castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . MINUS castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . STAR castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . SLASH castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PERCENT castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . AMP castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PIPE castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . HAT castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . LTLT castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . GTGT castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . ROR castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . ROL castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . EQEQ castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr EQEQ castop pexpr . [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . BANGEQ castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . LT castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . LE castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . GT castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . GE castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . QUESTIONMARK pexpr COLON pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## pexpr EQEQ castop pexpr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: T_U128 LBRACKET NID BANGEQ WHILE
##
## Ends in an error in state: 130.
##
## pexpr_r -> pexpr BANGEQ . castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## pexpr BANGEQ
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: T_U128 LBRACKET NID BANGEQ SVSIZE WHILE
##
## Ends in an error in state: 131.
##
## pexpr_r -> pexpr BANGEQ castop . pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## pexpr BANGEQ castop
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: T_U128 LBRACKET NID BANGEQ FALSE WHILE
##
## Ends in an error in state: 132.
##
## pexpr_r -> pexpr . AMPAMP pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PIPEPIPE pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PLUS castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . MINUS castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . STAR castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . SLASH castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PERCENT castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . AMP castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PIPE castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . HAT castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . LTLT castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . GTGT castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . ROR castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . ROL castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . EQEQ castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . BANGEQ castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr BANGEQ castop pexpr . [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . LT castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . LE castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . GT castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . GE castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . QUESTIONMARK pexpr COLON pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## pexpr BANGEQ castop pexpr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: T_U128 LBRACKET NID AMPAMP WHILE
##
## Ends in an error in state: 133.
##
## pexpr_r -> pexpr AMPAMP . pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## pexpr AMPAMP
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: T_U128 LBRACKET NID AMPAMP FALSE WHILE
##
## Ends in an error in state: 134.
##
## pexpr_r -> pexpr . AMPAMP pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr AMPAMP pexpr . [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PIPEPIPE pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PLUS castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . MINUS castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . STAR castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . SLASH castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PERCENT castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . AMP castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PIPE castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . HAT castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . LTLT castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . GTGT castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . ROR castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . ROL castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . EQEQ castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . BANGEQ castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . LT castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . LE castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . GT castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . GE castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . QUESTIONMARK pexpr COLON pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## pexpr AMPAMP pexpr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: T_U128 LBRACKET NID QUESTIONMARK NID COLON WHILE
##
## Ends in an error in state: 135.
##
## pexpr_r -> pexpr QUESTIONMARK pexpr COLON . pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## pexpr QUESTIONMARK pexpr COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: T_U128 LBRACKET NID QUESTIONMARK NID COLON FALSE WHILE
##
## Ends in an error in state: 136.
##
## pexpr_r -> pexpr . AMPAMP pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PIPEPIPE pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PLUS castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . MINUS castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . STAR castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . SLASH castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PERCENT castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . AMP castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PIPE castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . HAT castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . LTLT castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . GTGT castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . ROR castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . ROL castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . EQEQ castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . BANGEQ castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . LT castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . LE castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . GT castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . GE castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . QUESTIONMARK pexpr COLON pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr QUESTIONMARK pexpr COLON pexpr . [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## pexpr QUESTIONMARK pexpr COLON pexpr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: T_U128 LBRACKET LBRACKET NID MINUS WHILE
##
## Ends in an error in state: 137.
##
## option(mem_ofs) -> MINUS . pexpr [ RBRACKET ]
##
## The known suffix of the stack is as follows:
## MINUS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: T_U128 LBRACKET LBRACKET NID MINUS FALSE WHILE
##
## Ends in an error in state: 138.
##
## option(mem_ofs) -> MINUS pexpr . [ RBRACKET ]
## pexpr_r -> pexpr . AMPAMP pexpr [ STAR SLASH ROR ROL RBRACKET QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PIPEPIPE pexpr [ STAR SLASH ROR ROL RBRACKET QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PLUS castop pexpr [ STAR SLASH ROR ROL RBRACKET QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . MINUS castop pexpr [ STAR SLASH ROR ROL RBRACKET QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . STAR castop pexpr [ STAR SLASH ROR ROL RBRACKET QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . SLASH castop pexpr [ STAR SLASH ROR ROL RBRACKET QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PERCENT castop pexpr [ STAR SLASH ROR ROL RBRACKET QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . AMP castop pexpr [ STAR SLASH ROR ROL RBRACKET QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PIPE castop pexpr [ STAR SLASH ROR ROL RBRACKET QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . HAT castop pexpr [ STAR SLASH ROR ROL RBRACKET QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . LTLT castop pexpr [ STAR SLASH ROR ROL RBRACKET QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . GTGT castop pexpr [ STAR SLASH ROR ROL RBRACKET QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . ROR castop pexpr [ STAR SLASH ROR ROL RBRACKET QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . ROL castop pexpr [ STAR SLASH ROR ROL RBRACKET QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . EQEQ castop pexpr [ STAR SLASH ROR ROL RBRACKET QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . BANGEQ castop pexpr [ STAR SLASH ROR ROL RBRACKET QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . LT castop pexpr [ STAR SLASH ROR ROL RBRACKET QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . LE castop pexpr [ STAR SLASH ROR ROL RBRACKET QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . GT castop pexpr [ STAR SLASH ROR ROL RBRACKET QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . GE castop pexpr [ STAR SLASH ROR ROL RBRACKET QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . QUESTIONMARK pexpr COLON pexpr [ STAR SLASH ROR ROL RBRACKET QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## MINUS pexpr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: T_U128 NID EQ LBRACE NID COMMA WHILE
##
## Ends in an error in state: 141.
##
## separated_nonempty_list(COMMA,pexpr) -> pexpr COMMA . separated_nonempty_list(COMMA,pexpr) [ RPAREN RBRACKET RBRACE ]
##
## The known suffix of the stack is as follows:
## pexpr COMMA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: T_U128 LBRACKET SHARP NID LPAREN NID RBRACKET
##
## Ends in an error in state: 143.
##
## pexpr_r -> prim LPAREN loption(separated_nonempty_list(COMMA,pexpr)) . RPAREN [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## prim LPAREN loption(separated_nonempty_list(COMMA,pexpr))
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 63, spurious reduction of production pexpr_r -> var
## In state 68, spurious reduction of production pexpr -> pexpr_r
## In state 69, spurious reduction of production separated_nonempty_list(COMMA,pexpr) -> pexpr
## In state 65, spurious reduction of production loption(separated_nonempty_list(COMMA,pexpr)) -> separated_nonempty_list(COMMA,pexpr)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: T_U128 LBRACKET NID LPAREN NID RBRACKET
##
## Ends in an error in state: 145.
##
## pexpr_r -> var LPAREN loption(separated_nonempty_list(COMMA,pexpr)) . RPAREN [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## var LPAREN loption(separated_nonempty_list(COMMA,pexpr))
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 63, spurious reduction of production pexpr_r -> var
## In state 68, spurious reduction of production pexpr -> pexpr_r
## In state 69, spurious reduction of production separated_nonempty_list(COMMA,pexpr) -> pexpr
## In state 65, spurious reduction of production loption(separated_nonempty_list(COMMA,pexpr)) -> separated_nonempty_list(COMMA,pexpr)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: T_U128 LBRACKET NID DOT WHILE
##
## Ends in an error in state: 148.
##
## arr_access -> option(DOT) . LBRACKET arr_access_i RBRACKET [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ EQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## option(DOT)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: T_U128 LBRACKET NID LBRACKET WHILE
##
## Ends in an error in state: 149.
##
## arr_access -> option(DOT) LBRACKET . arr_access_i RBRACKET [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ EQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## option(DOT) LBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: T_U128 LBRACKET NID LBRACKET T_U128 WHILE
##
## Ends in an error in state: 151.
##
## arr_access_i -> option(utype) . pexpr option(arr_access_len) [ RBRACKET ]
##
## The known suffix of the stack is as follows:
## option(utype)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: T_U128 LBRACKET NID LBRACKET FALSE WHILE
##
## Ends in an error in state: 152.
##
## arr_access_i -> option(utype) pexpr . option(arr_access_len) [ RBRACKET ]
## pexpr_r -> pexpr . AMPAMP pexpr [ STAR SLASH ROR ROL RBRACKET QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PIPEPIPE pexpr [ STAR SLASH ROR ROL RBRACKET QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PLUS castop pexpr [ STAR SLASH ROR ROL RBRACKET QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . MINUS castop pexpr [ STAR SLASH ROR ROL RBRACKET QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . STAR castop pexpr [ STAR SLASH ROR ROL RBRACKET QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . SLASH castop pexpr [ STAR SLASH ROR ROL RBRACKET QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PERCENT castop pexpr [ STAR SLASH ROR ROL RBRACKET QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . AMP castop pexpr [ STAR SLASH ROR ROL RBRACKET QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PIPE castop pexpr [ STAR SLASH ROR ROL RBRACKET QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . HAT castop pexpr [ STAR SLASH ROR ROL RBRACKET QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . LTLT castop pexpr [ STAR SLASH ROR ROL RBRACKET QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . GTGT castop pexpr [ STAR SLASH ROR ROL RBRACKET QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . ROR castop pexpr [ STAR SLASH ROR ROL RBRACKET QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . ROL castop pexpr [ STAR SLASH ROR ROL RBRACKET QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . EQEQ castop pexpr [ STAR SLASH ROR ROL RBRACKET QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . BANGEQ castop pexpr [ STAR SLASH ROR ROL RBRACKET QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . LT castop pexpr [ STAR SLASH ROR ROL RBRACKET QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . LE castop pexpr [ STAR SLASH ROR ROL RBRACKET QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . GT castop pexpr [ STAR SLASH ROR ROL RBRACKET QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . GE castop pexpr [ STAR SLASH ROR ROL RBRACKET QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . QUESTIONMARK pexpr COLON pexpr [ STAR SLASH ROR ROL RBRACKET QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ COLON BANGEQ AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## option(utype) pexpr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: T_U128 LBRACKET NID LBRACKET NID COLON WHILE
##
## Ends in an error in state: 153.
##
## arr_access_len -> COLON . pexpr [ RBRACKET ]
##
## The known suffix of the stack is as follows:
## COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: T_U128 LBRACKET NID LBRACKET NID COLON FALSE WHILE
##
## Ends in an error in state: 154.
##
## arr_access_len -> COLON pexpr . [ RBRACKET ]
## pexpr_r -> pexpr . AMPAMP pexpr [ STAR SLASH ROR ROL RBRACKET QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PIPEPIPE pexpr [ STAR SLASH ROR ROL RBRACKET QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PLUS castop pexpr [ STAR SLASH ROR ROL RBRACKET QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . MINUS castop pexpr [ STAR SLASH ROR ROL RBRACKET QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . STAR castop pexpr [ STAR SLASH ROR ROL RBRACKET QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . SLASH castop pexpr [ STAR SLASH ROR ROL RBRACKET QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PERCENT castop pexpr [ STAR SLASH ROR ROL RBRACKET QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . AMP castop pexpr [ STAR SLASH ROR ROL RBRACKET QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PIPE castop pexpr [ STAR SLASH ROR ROL RBRACKET QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . HAT castop pexpr [ STAR SLASH ROR ROL RBRACKET QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . LTLT castop pexpr [ STAR SLASH ROR ROL RBRACKET QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . GTGT castop pexpr [ STAR SLASH ROR ROL RBRACKET QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . ROR castop pexpr [ STAR SLASH ROR ROL RBRACKET QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . ROL castop pexpr [ STAR SLASH ROR ROL RBRACKET QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . EQEQ castop pexpr [ STAR SLASH ROR ROL RBRACKET QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . BANGEQ castop pexpr [ STAR SLASH ROR ROL RBRACKET QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . LT castop pexpr [ STAR SLASH ROR ROL RBRACKET QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . LE castop pexpr [ STAR SLASH ROR ROL RBRACKET QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . GT castop pexpr [ STAR SLASH ROR ROL RBRACKET QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . GE castop pexpr [ STAR SLASH ROR ROL RBRACKET QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . QUESTIONMARK pexpr COLON pexpr [ STAR SLASH ROR ROL RBRACKET QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## COLON pexpr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: T_U128 LBRACKET LPAREN T_U128 WHILE
##
## Ends in an error in state: 161.
##
## option(parens(utype)) -> LPAREN utype . RPAREN [ LBRACKET ]
##
## The known suffix of the stack is as follows:
## LPAREN utype
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: T_U128 LBRACKET LPAREN SVSIZE WHILE
##
## Ends in an error in state: 164.
##
## pexpr_r -> LPAREN svsize . RPAREN LBRACKET separated_nonempty_list(COMMA,pexpr) RBRACKET [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## LPAREN svsize
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: T_U128 LBRACKET LPAREN SVSIZE RPAREN WHILE
##
## Ends in an error in state: 165.
##
## pexpr_r -> LPAREN svsize RPAREN . LBRACKET separated_nonempty_list(COMMA,pexpr) RBRACKET [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## LPAREN svsize RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: T_U128 LBRACKET LPAREN SVSIZE RPAREN LBRACKET WHILE
##
## Ends in an error in state: 166.
##
## pexpr_r -> LPAREN svsize RPAREN LBRACKET . separated_nonempty_list(COMMA,pexpr) RBRACKET [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## LPAREN svsize RPAREN LBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: T_U128 LBRACKET LPAREN SVSIZE RPAREN LBRACKET NID RPAREN
##
## Ends in an error in state: 167.
##
## pexpr_r -> LPAREN svsize RPAREN LBRACKET separated_nonempty_list(COMMA,pexpr) . RBRACKET [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## LPAREN svsize RPAREN LBRACKET separated_nonempty_list(COMMA,pexpr)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 63, spurious reduction of production pexpr_r -> var
## In state 68, spurious reduction of production pexpr -> pexpr_r
## In state 69, spurious reduction of production separated_nonempty_list(COMMA,pexpr) -> pexpr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: T_U128 LBRACKET LPAREN FALSE WHILE
##
## Ends in an error in state: 169.
##
## pexpr_r -> pexpr . AMPAMP pexpr [ STAR SLASH RPAREN ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PIPEPIPE pexpr [ STAR SLASH RPAREN ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PLUS castop pexpr [ STAR SLASH RPAREN ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . MINUS castop pexpr [ STAR SLASH RPAREN ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . STAR castop pexpr [ STAR SLASH RPAREN ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . SLASH castop pexpr [ STAR SLASH RPAREN ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PERCENT castop pexpr [ STAR SLASH RPAREN ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . AMP castop pexpr [ STAR SLASH RPAREN ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PIPE castop pexpr [ STAR SLASH RPAREN ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . HAT castop pexpr [ STAR SLASH RPAREN ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . LTLT castop pexpr [ STAR SLASH RPAREN ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . GTGT castop pexpr [ STAR SLASH RPAREN ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . ROR castop pexpr [ STAR SLASH RPAREN ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . ROL castop pexpr [ STAR SLASH RPAREN ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . EQEQ castop pexpr [ STAR SLASH RPAREN ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . BANGEQ castop pexpr [ STAR SLASH RPAREN ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . LT castop pexpr [ STAR SLASH RPAREN ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . LE castop pexpr [ STAR SLASH RPAREN ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . GT castop pexpr [ STAR SLASH RPAREN ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . GE castop pexpr [ STAR SLASH RPAREN ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> LPAREN pexpr . RPAREN [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . QUESTIONMARK pexpr COLON pexpr [ STAR SLASH RPAREN ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## LPAREN pexpr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: T_U128 LBRACKET LPAREN SWSIZE WHILE
##
## Ends in an error in state: 171.
##
## pexpr_r -> LPAREN cast . RPAREN pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## LPAREN cast
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: T_U128 LBRACKET LPAREN SWSIZE RPAREN WHILE
##
## Ends in an error in state: 172.
##
## pexpr_r -> LPAREN cast RPAREN . pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## LPAREN cast RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: T_U128 LBRACKET MINUS FALSE WHILE
##
## Ends in an error in state: 174.
##
## pexpr_r -> MINUS castop pexpr . [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . AMPAMP pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PIPEPIPE pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PLUS castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . MINUS castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . STAR castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . SLASH castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PERCENT castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . AMP castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PIPE castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . HAT castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . LTLT castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . GTGT castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . ROR castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . ROL castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . EQEQ castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . BANGEQ castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . LT castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . LE castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . GT castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . GE castop pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . QUESTIONMARK pexpr COLON pexpr [ TO STAR SLASH SEMICOLON RPAREN ROR ROL RBRACKET RBRACE QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE IF HAT GTGT GT GE EQEQ DOWNTO COMMA COLON BANGEQ AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## MINUS castop pexpr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: T_U128 LBRACKET FALSE WHILE
##
## Ends in an error in state: 175.
##
## pexpr_r -> pexpr . AMPAMP pexpr [ STAR SLASH ROR ROL RBRACKET QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PIPEPIPE pexpr [ STAR SLASH ROR ROL RBRACKET QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PLUS castop pexpr [ STAR SLASH ROR ROL RBRACKET QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . MINUS castop pexpr [ STAR SLASH ROR ROL RBRACKET QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . STAR castop pexpr [ STAR SLASH ROR ROL RBRACKET QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . SLASH castop pexpr [ STAR SLASH ROR ROL RBRACKET QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PERCENT castop pexpr [ STAR SLASH ROR ROL RBRACKET QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . AMP castop pexpr [ STAR SLASH ROR ROL RBRACKET QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PIPE castop pexpr [ STAR SLASH ROR ROL RBRACKET QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . HAT castop pexpr [ STAR SLASH ROR ROL RBRACKET QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . LTLT castop pexpr [ STAR SLASH ROR ROL RBRACKET QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . GTGT castop pexpr [ STAR SLASH ROR ROL RBRACKET QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . ROR castop pexpr [ STAR SLASH ROR ROL RBRACKET QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . ROL castop pexpr [ STAR SLASH ROR ROL RBRACKET QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . EQEQ castop pexpr [ STAR SLASH ROR ROL RBRACKET QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . BANGEQ castop pexpr [ STAR SLASH ROR ROL RBRACKET QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . LT castop pexpr [ STAR SLASH ROR ROL RBRACKET QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . LE castop pexpr [ STAR SLASH ROR ROL RBRACKET QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . GT castop pexpr [ STAR SLASH ROR ROL RBRACKET QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . GE castop pexpr [ STAR SLASH ROR ROL RBRACKET QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . QUESTIONMARK pexpr COLON pexpr [ STAR SLASH ROR ROL RBRACKET QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## ptype_r -> utype LBRACKET pexpr . RBRACKET [ RPAREN NID LBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## utype LBRACKET pexpr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: PARAM T_BOOL WHILE
##
## Ends in an error in state: 178.
##
## pparam -> PARAM ptype . NID EQ pexpr SEMICOLON [ T_U8 T_U64 T_U32 T_U256 T_U16 T_U128 T_INT T_BOOL SHARP REQUIRE PARAM INLINE FROM FN EXPORT EXEC EOF ]
##
## The known suffix of the stack is as follows:
## PARAM ptype
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: PARAM T_U128 NID WHILE
##
## Ends in an error in state: 179.
##
## pparam -> PARAM ptype NID . EQ pexpr SEMICOLON [ T_U8 T_U64 T_U32 T_U256 T_U16 T_U128 T_INT T_BOOL SHARP REQUIRE PARAM INLINE FROM FN EXPORT EXEC EOF ]
##
## The known suffix of the stack is as follows:
## PARAM ptype NID
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: PARAM T_U128 NID EQ WHILE
##
## Ends in an error in state: 180.
##
## pparam -> PARAM ptype NID EQ . pexpr SEMICOLON [ T_U8 T_U64 T_U32 T_U256 T_U16 T_U128 T_INT T_BOOL SHARP REQUIRE PARAM INLINE FROM FN EXPORT EXEC EOF ]
##
## The known suffix of the stack is as follows:
## PARAM ptype NID EQ
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: PARAM T_U128 NID EQ FALSE WHILE
##
## Ends in an error in state: 181.
##
## pexpr_r -> pexpr . AMPAMP pexpr [ STAR SLASH SEMICOLON ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PIPEPIPE pexpr [ STAR SLASH SEMICOLON ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PLUS castop pexpr [ STAR SLASH SEMICOLON ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . MINUS castop pexpr [ STAR SLASH SEMICOLON ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . STAR castop pexpr [ STAR SLASH SEMICOLON ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . SLASH castop pexpr [ STAR SLASH SEMICOLON ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PERCENT castop pexpr [ STAR SLASH SEMICOLON ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . AMP castop pexpr [ STAR SLASH SEMICOLON ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PIPE castop pexpr [ STAR SLASH SEMICOLON ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . HAT castop pexpr [ STAR SLASH SEMICOLON ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . LTLT castop pexpr [ STAR SLASH SEMICOLON ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . GTGT castop pexpr [ STAR SLASH SEMICOLON ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . ROR castop pexpr [ STAR SLASH SEMICOLON ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . ROL castop pexpr [ STAR SLASH SEMICOLON ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . EQEQ castop pexpr [ STAR SLASH SEMICOLON ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . BANGEQ castop pexpr [ STAR SLASH SEMICOLON ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . LT castop pexpr [ STAR SLASH SEMICOLON ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . LE castop pexpr [ STAR SLASH SEMICOLON ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . GT castop pexpr [ STAR SLASH SEMICOLON ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . GE castop pexpr [ STAR SLASH SEMICOLON ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . QUESTIONMARK pexpr COLON pexpr [ STAR SLASH SEMICOLON ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pparam -> PARAM ptype NID EQ pexpr . SEMICOLON [ T_U8 T_U64 T_U32 T_U256 T_U16 T_U128 T_INT T_BOOL SHARP REQUIRE PARAM INLINE FROM FN EXPORT EXEC EOF ]
##
## The known suffix of the stack is as follows:
## PARAM ptype NID EQ pexpr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: FROM WHILE
##
## Ends in an error in state: 183.
##
## from -> FROM . NID [ REQUIRE ]
##
## The known suffix of the stack is as follows:
## FROM
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: EXEC WHILE
##
## Ends in an error in state: 185.
##
## pexec -> EXEC . NID LPAREN loption(separated_nonempty_list(COMMA,range)) RPAREN [ T_U8 T_U64 T_U32 T_U256 T_U16 T_U128 T_INT T_BOOL SHARP REQUIRE PARAM INLINE FROM FN EXPORT EXEC EOF ]
##
## The known suffix of the stack is as follows:
## EXEC
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: EXEC NID WHILE
##
## Ends in an error in state: 186.
##
## pexec -> EXEC NID . LPAREN loption(separated_nonempty_list(COMMA,range)) RPAREN [ T_U8 T_U64 T_U32 T_U256 T_U16 T_U128 T_INT T_BOOL SHARP REQUIRE PARAM INLINE FROM FN EXPORT EXEC EOF ]
##
## The known suffix of the stack is as follows:
## EXEC NID
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: EXEC NID LPAREN WHILE
##
## Ends in an error in state: 187.
##
## pexec -> EXEC NID LPAREN . loption(separated_nonempty_list(COMMA,range)) RPAREN [ T_U8 T_U64 T_U32 T_U256 T_U16 T_U128 T_INT T_BOOL SHARP REQUIRE PARAM INLINE FROM FN EXPORT EXEC EOF ]
##
## The known suffix of the stack is as follows:
## EXEC NID LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: EXEC NID LPAREN INT WHILE
##
## Ends in an error in state: 188.
##
## range -> INT . COLON INT [ RPAREN COMMA ]
##
## The known suffix of the stack is as follows:
## INT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: EXEC NID LPAREN INT COLON WHILE
##
## Ends in an error in state: 189.
##
## range -> INT COLON . INT [ RPAREN COMMA ]
##
## The known suffix of the stack is as follows:
## INT COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: EXEC NID LPAREN INT COLON INT WHILE
##
## Ends in an error in state: 192.
##
## separated_nonempty_list(COMMA,range) -> range . [ RPAREN ]
## separated_nonempty_list(COMMA,range) -> range . COMMA separated_nonempty_list(COMMA,range) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## range
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: EXEC NID LPAREN INT COLON INT COMMA WHILE
##
## Ends in an error in state: 193.
##
## separated_nonempty_list(COMMA,range) -> range COMMA . separated_nonempty_list(COMMA,range) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## range COMMA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: SHARP EXPORT RBRACKET
##
## Ends in an error in state: 197.
##
## list(top_annotation) -> top_annotation . list(top_annotation) [ WHILE UNDERSCORE STACK REG QUESTIONMARK NID LPAREN LBRACKET INLINE IF GLOBAL FOR FN EXPORT ARRAYINIT ]
##
## The known suffix of the stack is as follows:
## top_annotation
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 22, spurious reduction of production option(attribute) ->
## In state 39, spurious reduction of production annotation -> annotationlabel option(attribute)
## In state 41, spurious reduction of production top_annotation -> SHARP annotation
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: EXEC NID LPAREN RPAREN WHILE
##
## Ends in an error in state: 199.
##
## list(loc(top)) -> top . list(loc(top)) [ EOF ]
##
## The known suffix of the stack is as follows:
## top
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: T_BOOL WHILE
##
## Ends in an error in state: 200.
##
## pglobal -> ptype . NID EQ pgexpr SEMICOLON [ T_U8 T_U64 T_U32 T_U256 T_U16 T_U128 T_INT T_BOOL SHARP REQUIRE PARAM INLINE FROM FN EXPORT EXEC EOF ]
##
## The known suffix of the stack is as follows:
## ptype
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: T_U128 NID WHILE
##
## Ends in an error in state: 201.
##
## pglobal -> ptype NID . EQ pgexpr SEMICOLON [ T_U8 T_U64 T_U32 T_U256 T_U16 T_U128 T_INT T_BOOL SHARP REQUIRE PARAM INLINE FROM FN EXPORT EXEC EOF ]
##
## The known suffix of the stack is as follows:
## ptype NID
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: T_U128 NID EQ WHILE
##
## Ends in an error in state: 202.
##
## pglobal -> ptype NID EQ . pgexpr SEMICOLON [ T_U8 T_U64 T_U32 T_U256 T_U16 T_U128 T_INT T_BOOL SHARP REQUIRE PARAM INLINE FROM FN EXPORT EXEC EOF ]
##
## The known suffix of the stack is as follows:
## ptype NID EQ
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: T_U128 NID EQ LBRACE WHILE
##
## Ends in an error in state: 203.
##
## pgexpr -> LBRACE . separated_nonempty_list(COMMA,pexpr) RBRACE [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## LBRACE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: T_U128 NID EQ LBRACE NID RPAREN
##
## Ends in an error in state: 204.
##
## pgexpr -> LBRACE separated_nonempty_list(COMMA,pexpr) . RBRACE [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## LBRACE separated_nonempty_list(COMMA,pexpr)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 63, spurious reduction of production pexpr_r -> var
## In state 68, spurious reduction of production pexpr -> pexpr_r
## In state 69, spurious reduction of production separated_nonempty_list(COMMA,pexpr) -> pexpr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: T_U128 NID EQ LBRACE NID RBRACE WHILE
##
## Ends in an error in state: 206.
##
## pglobal -> ptype NID EQ pgexpr . SEMICOLON [ T_U8 T_U64 T_U32 T_U256 T_U16 T_U128 T_INT T_BOOL SHARP REQUIRE PARAM INLINE FROM FN EXPORT EXEC EOF ]
##
## The known suffix of the stack is as follows:
## ptype NID EQ pgexpr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: T_U128 NID EQ FALSE WHILE
##
## Ends in an error in state: 208.
##
## pexpr_r -> pexpr . AMPAMP pexpr [ STAR SLASH SEMICOLON ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PIPEPIPE pexpr [ STAR SLASH SEMICOLON ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PLUS castop pexpr [ STAR SLASH SEMICOLON ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . MINUS castop pexpr [ STAR SLASH SEMICOLON ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . STAR castop pexpr [ STAR SLASH SEMICOLON ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . SLASH castop pexpr [ STAR SLASH SEMICOLON ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PERCENT castop pexpr [ STAR SLASH SEMICOLON ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . AMP castop pexpr [ STAR SLASH SEMICOLON ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PIPE castop pexpr [ STAR SLASH SEMICOLON ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . HAT castop pexpr [ STAR SLASH SEMICOLON ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . LTLT castop pexpr [ STAR SLASH SEMICOLON ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . GTGT castop pexpr [ STAR SLASH SEMICOLON ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . ROR castop pexpr [ STAR SLASH SEMICOLON ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . ROL castop pexpr [ STAR SLASH SEMICOLON ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . EQEQ castop pexpr [ STAR SLASH SEMICOLON ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . BANGEQ castop pexpr [ STAR SLASH SEMICOLON ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . LT castop pexpr [ STAR SLASH SEMICOLON ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . LE castop pexpr [ STAR SLASH SEMICOLON ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . GT castop pexpr [ STAR SLASH SEMICOLON ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . GE castop pexpr [ STAR SLASH SEMICOLON ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . QUESTIONMARK pexpr COLON pexpr [ STAR SLASH SEMICOLON ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pgexpr -> pexpr . [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## pexpr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: FROM NID WHILE
##
## Ends in an error in state: 214.
##
## prequire -> option(from) . REQUIRE nonempty_list(prequire1) [ T_U8 T_U64 T_U32 T_U256 T_U16 T_U128 T_INT T_BOOL SHARP REQUIRE PARAM INLINE FROM FN EXPORT EXEC EOF ]
##
## The known suffix of the stack is as follows:
## option(from)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: REQUIRE WHILE
##
## Ends in an error in state: 215.
##
## prequire -> option(from) REQUIRE . nonempty_list(prequire1) [ T_U8 T_U64 T_U32 T_U256 T_U16 T_U128 T_INT T_BOOL SHARP REQUIRE PARAM INLINE FROM FN EXPORT EXEC EOF ]
##
## The known suffix of the stack is as follows:
## option(from) REQUIRE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: REQUIRE STRING WHILE
##
## Ends in an error in state: 217.
##
## nonempty_list(prequire1) -> prequire1 . [ T_U8 T_U64 T_U32 T_U256 T_U16 T_U128 T_INT T_BOOL SHARP REQUIRE PARAM INLINE FROM FN EXPORT EXEC EOF ]
## nonempty_list(prequire1) -> prequire1 . nonempty_list(prequire1) [ T_U8 T_U64 T_U32 T_U256 T_U16 T_U128 T_INT T_BOOL SHARP REQUIRE PARAM INLINE FROM FN EXPORT EXEC EOF ]
##
## The known suffix of the stack is as follows:
## prequire1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: SHARP EXPORT WHILE
##
## Ends in an error in state: 223.
##
## pfundef -> annotations . option(call_conv) FN NID LPAREN loption(separated_nonempty_list(COMMA,annot_pvardecl)) RPAREN option(prefix(RARROW,tuple(annot_stor_type))) pfunbody [ T_U8 T_U64 T_U32 T_U256 T_U16 T_U128 T_INT T_BOOL SHARP REQUIRE PARAM INLINE FROM FN EXPORT EXEC EOF ]
##
## The known suffix of the stack is as follows:
## annotations
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 22, spurious reduction of production option(attribute) ->
## In state 39, spurious reduction of production annotation -> annotationlabel option(attribute)
## In state 41, spurious reduction of production top_annotation -> SHARP annotation
## In state 197, spurious reduction of production list(top_annotation) ->
## In state 198, spurious reduction of production list(top_annotation) -> top_annotation list(top_annotation)
## In state 220, spurious reduction of production annotations -> list(top_annotation)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: EXPORT WHILE
##
## Ends in an error in state: 226.
##
## pfundef -> annotations option(call_conv) . FN NID LPAREN loption(separated_nonempty_list(COMMA,annot_pvardecl)) RPAREN option(prefix(RARROW,tuple(annot_stor_type))) pfunbody [ T_U8 T_U64 T_U32 T_U256 T_U16 T_U128 T_INT T_BOOL SHARP REQUIRE PARAM INLINE FROM FN EXPORT EXEC EOF ]
##
## The known suffix of the stack is as follows:
## annotations option(call_conv)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: FN WHILE
##
## Ends in an error in state: 227.
##
## pfundef -> annotations option(call_conv) FN . NID LPAREN loption(separated_nonempty_list(COMMA,annot_pvardecl)) RPAREN option(prefix(RARROW,tuple(annot_stor_type))) pfunbody [ T_U8 T_U64 T_U32 T_U256 T_U16 T_U128 T_INT T_BOOL SHARP REQUIRE PARAM INLINE FROM FN EXPORT EXEC EOF ]
##
## The known suffix of the stack is as follows:
## annotations option(call_conv) FN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: FN NID WHILE
##
## Ends in an error in state: 228.
##
## pfundef -> annotations option(call_conv) FN NID . LPAREN loption(separated_nonempty_list(COMMA,annot_pvardecl)) RPAREN option(prefix(RARROW,tuple(annot_stor_type))) pfunbody [ T_U8 T_U64 T_U32 T_U256 T_U16 T_U128 T_INT T_BOOL SHARP REQUIRE PARAM INLINE FROM FN EXPORT EXEC EOF ]
##
## The known suffix of the stack is as follows:
## annotations option(call_conv) FN NID
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: FN NID LPAREN WHILE
##
## Ends in an error in state: 229.
##
## pfundef -> annotations option(call_conv) FN NID LPAREN . loption(separated_nonempty_list(COMMA,annot_pvardecl)) RPAREN option(prefix(RARROW,tuple(annot_stor_type))) pfunbody [ T_U8 T_U64 T_U32 T_U256 T_U16 T_U128 T_INT T_BOOL SHARP REQUIRE PARAM INLINE FROM FN EXPORT EXEC EOF ]
##
## The known suffix of the stack is as follows:
## annotations option(call_conv) FN NID LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: FN NID LPAREN RPAREN WHILE
##
## Ends in an error in state: 232.
##
## pfundef -> annotations option(call_conv) FN NID LPAREN loption(separated_nonempty_list(COMMA,annot_pvardecl)) RPAREN . option(prefix(RARROW,tuple(annot_stor_type))) pfunbody [ T_U8 T_U64 T_U32 T_U256 T_U16 T_U128 T_INT T_BOOL SHARP REQUIRE PARAM INLINE FROM FN EXPORT EXEC EOF ]
##
## The known suffix of the stack is as follows:
## annotations option(call_conv) FN NID LPAREN loption(separated_nonempty_list(COMMA,annot_pvardecl)) RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: FN NID LPAREN RPAREN RARROW WHILE
##
## Ends in an error in state: 233.
##
## option(prefix(RARROW,tuple(annot_stor_type))) -> RARROW . LPAREN loption(separated_nonempty_list(COMMA,annot_stor_type)) RPAREN [ LBRACE ]
## option(prefix(RARROW,tuple(annot_stor_type))) -> RARROW . loption(separated_nonempty_list(COMMA,annot_stor_type)) [ LBRACE ]
##
## The known suffix of the stack is as follows:
## RARROW
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: FN NID LPAREN RPAREN RARROW LPAREN WHILE
##
## Ends in an error in state: 234.
##
## option(prefix(RARROW,tuple(annot_stor_type))) -> RARROW LPAREN . loption(separated_nonempty_list(COMMA,annot_stor_type)) RPAREN [ LBRACE ]
##
## The known suffix of the stack is as follows:
## RARROW LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: FN NID LPAREN RPAREN RARROW LPAREN GLOBAL T_U128 LBRACE
##
## Ends in an error in state: 236.
##
## option(prefix(RARROW,tuple(annot_stor_type))) -> RARROW LPAREN loption(separated_nonempty_list(COMMA,annot_stor_type)) . RPAREN [ LBRACE ]
##
## The known suffix of the stack is as follows:
## RARROW LPAREN loption(separated_nonempty_list(COMMA,annot_stor_type))
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 43, spurious reduction of production ptype_r -> utype
## In state 177, spurious reduction of production ptype -> ptype_r
## In state 253, spurious reduction of production stor_type -> storage ptype
## In state 254, spurious reduction of production annot_stor_type -> annotations stor_type
## In state 255, spurious reduction of production separated_nonempty_list(COMMA,annot_stor_type) -> annot_stor_type
## In state 235, spurious reduction of production loption(separated_nonempty_list(COMMA,annot_stor_type)) -> separated_nonempty_list(COMMA,annot_stor_type)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: FN NID LPAREN RPAREN RARROW SHARP EXPORT WHILE
##
## Ends in an error in state: 238.
##
## annot_stor_type -> annotations . stor_type [ RPAREN LBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## annotations
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 22, spurious reduction of production option(attribute) ->
## In state 39, spurious reduction of production annotation -> annotationlabel option(attribute)
## In state 41, spurious reduction of production top_annotation -> SHARP annotation
## In state 197, spurious reduction of production list(top_annotation) ->
## In state 198, spurious reduction of production list(top_annotation) -> top_annotation list(top_annotation)
## In state 220, spurious reduction of production annotations -> list(top_annotation)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: FN NID LPAREN STACK WHILE
##
## Ends in an error in state: 239.
##
## storage -> STACK . ptr [ T_U8 T_U64 T_U32 T_U256 T_U16 T_U128 T_INT T_BOOL ]
##
## The known suffix of the stack is as follows:
## STACK
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: FN NID LPAREN REG CONSTANT WHILE
##
## Ends in an error in state: 245.
##
## pointer -> option(writable) . POINTER [ T_U8 T_U64 T_U32 T_U256 T_U16 T_U128 T_INT T_BOOL ]
##
## The known suffix of the stack is as follows:
## option(writable)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: FN NID LPAREN REG WHILE
##
## Ends in an error in state: 248.
##
## storage -> REG . ptr [ T_U8 T_U64 T_U32 T_U256 T_U16 T_U128 T_INT T_BOOL ]
##
## The known suffix of the stack is as follows:
## REG
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: FN NID LPAREN GLOBAL WHILE
##
## Ends in an error in state: 252.
##
## stor_type -> storage . ptype [ RPAREN NID LBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## storage
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: FN NID LPAREN RPAREN RARROW GLOBAL T_BOOL WHILE
##
## Ends in an error in state: 255.
##
## separated_nonempty_list(COMMA,annot_stor_type) -> annot_stor_type . [ RPAREN LBRACE ]
## separated_nonempty_list(COMMA,annot_stor_type) -> annot_stor_type . COMMA separated_nonempty_list(COMMA,annot_stor_type) [ RPAREN LBRACE ]
##
## The known suffix of the stack is as follows:
## annot_stor_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: FN NID LPAREN RPAREN RARROW GLOBAL T_U128 COMMA WHILE
##
## Ends in an error in state: 256.
##
## separated_nonempty_list(COMMA,annot_stor_type) -> annot_stor_type COMMA . separated_nonempty_list(COMMA,annot_stor_type) [ RPAREN LBRACE ]
##
## The known suffix of the stack is as follows:
## annot_stor_type COMMA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: FN NID LPAREN RPAREN RARROW LPAREN RPAREN WHILE
##
## Ends in an error in state: 259.
##
## pfundef -> annotations option(call_conv) FN NID LPAREN loption(separated_nonempty_list(COMMA,annot_pvardecl)) RPAREN option(prefix(RARROW,tuple(annot_stor_type))) . pfunbody [ T_U8 T_U64 T_U32 T_U256 T_U16 T_U128 T_INT T_BOOL SHARP REQUIRE PARAM INLINE FROM FN EXPORT EXEC EOF ]
##
## The known suffix of the stack is as follows:
## annotations option(call_conv) FN NID LPAREN loption(separated_nonempty_list(COMMA,annot_pvardecl)) RPAREN option(prefix(RARROW,tuple(annot_stor_type)))
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: FN NID LPAREN RPAREN LBRACE T_U8
##
## Ends in an error in state: 260.
##
## pfunbody -> LBRACE . list(pinstr) option(__anonymous_1) RBRACE [ T_U8 T_U64 T_U32 T_U256 T_U16 T_U128 T_INT T_BOOL SHARP REQUIRE PARAM INLINE FROM FN EXPORT EXEC EOF ]
##
## The known suffix of the stack is as follows:
## LBRACE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: FN NID LPAREN RPAREN LBRACE NID EQ NID SEMICOLON T_U8
##
## Ends in an error in state: 261.
##
## list(pinstr) -> pinstr . list(pinstr) [ RETURN RBRACE ]
##
## The known suffix of the stack is as follows:
## pinstr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: FN NID LPAREN RPAREN LBRACE SHARP EXPORT FN
##
## Ends in an error in state: 263.
##
## pinstr -> annotations . pinstr_r [ WHILE UNDERSCORE STACK SHARP RETURN REG RBRACE QUESTIONMARK NID LPAREN LBRACKET INLINE IF GLOBAL FOR ARRAYINIT ]
##
## The known suffix of the stack is as follows:
## annotations
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 22, spurious reduction of production option(attribute) ->
## In state 39, spurious reduction of production annotation -> annotationlabel option(attribute)
## In state 41, spurious reduction of production top_annotation -> SHARP annotation
## In state 197, spurious reduction of production list(top_annotation) ->
## In state 198, spurious reduction of production list(top_annotation) -> top_annotation list(top_annotation)
## In state 220, spurious reduction of production annotations -> list(top_annotation)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: FN NID LPAREN RPAREN LBRACE WHILE WHILE
##
## Ends in an error in state: 264.
##
## pinstr_r -> WHILE . option(pblock) LPAREN pexpr RPAREN [ WHILE UNDERSCORE STACK SHARP RETURN REG RBRACE QUESTIONMARK NID LPAREN LBRACKET INLINE IF GLOBAL FOR ARRAYINIT ]
## pinstr_r -> WHILE . option(pblock) LPAREN pexpr RPAREN pblock [ WHILE UNDERSCORE STACK SHARP RETURN REG RBRACE QUESTIONMARK NID LPAREN LBRACKET INLINE IF GLOBAL FOR ARRAYINIT ]
##
## The known suffix of the stack is as follows:
## WHILE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: FN NID LPAREN RPAREN LBRACE WHILE LBRACE T_U8
##
## Ends in an error in state: 265.
##
## pblock_r -> LBRACE . list(pinstr) RBRACE [ WHILE UNDERSCORE STACK SHARP RETURN REG RBRACE QUESTIONMARK NID LPAREN LBRACKET INLINE IF GLOBAL FOR ELSE ARRAYINIT ]
##
## The known suffix of the stack is as follows:
## LBRACE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: FN NID LPAREN RPAREN LBRACE WHILE LBRACE IF NID LBRACE RBRACE RETURN
##
## Ends in an error in state: 266.
##
## pblock_r -> LBRACE list(pinstr) . RBRACE [ WHILE UNDERSCORE STACK SHARP RETURN REG RBRACE QUESTIONMARK NID LPAREN LBRACKET INLINE IF GLOBAL FOR ELSE ARRAYINIT ]
##
## The known suffix of the stack is as follows:
## LBRACE list(pinstr)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 298, spurious reduction of production pif -> IF pexpr pblock
## In state 378, spurious reduction of production pinstr_r -> pif
## In state 377, spurious reduction of production pinstr -> annotations pinstr_r
## In state 261, spurious reduction of production list(pinstr) ->
## In state 262, spurious reduction of production list(pinstr) -> pinstr list(pinstr)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: FN NID LPAREN RPAREN LBRACE WHILE LBRACE RBRACE WHILE
##
## Ends in an error in state: 270.
##
## pinstr_r -> WHILE option(pblock) . LPAREN pexpr RPAREN [ WHILE UNDERSCORE STACK SHARP RETURN REG RBRACE QUESTIONMARK NID LPAREN LBRACKET INLINE IF GLOBAL FOR ARRAYINIT ]
## pinstr_r -> WHILE option(pblock) . LPAREN pexpr RPAREN pblock [ WHILE UNDERSCORE STACK SHARP RETURN REG RBRACE QUESTIONMARK NID LPAREN LBRACKET INLINE IF GLOBAL FOR ARRAYINIT ]
##
## The known suffix of the stack is as follows:
## WHILE option(pblock)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: FN NID LPAREN RPAREN LBRACE WHILE LPAREN WHILE
##
## Ends in an error in state: 271.
##
## pinstr_r -> WHILE option(pblock) LPAREN . pexpr RPAREN [ WHILE UNDERSCORE STACK SHARP RETURN REG RBRACE QUESTIONMARK NID LPAREN LBRACKET INLINE IF GLOBAL FOR ARRAYINIT ]
## pinstr_r -> WHILE option(pblock) LPAREN . pexpr RPAREN pblock [ WHILE UNDERSCORE STACK SHARP RETURN REG RBRACE QUESTIONMARK NID LPAREN LBRACKET INLINE IF GLOBAL FOR ARRAYINIT ]
##
## The known suffix of the stack is as follows:
## WHILE option(pblock) LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: FN NID LPAREN RPAREN LBRACE WHILE LPAREN FALSE WHILE
##
## Ends in an error in state: 272.
##
## pexpr_r -> pexpr . AMPAMP pexpr [ STAR SLASH RPAREN ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PIPEPIPE pexpr [ STAR SLASH RPAREN ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PLUS castop pexpr [ STAR SLASH RPAREN ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . MINUS castop pexpr [ STAR SLASH RPAREN ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . STAR castop pexpr [ STAR SLASH RPAREN ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . SLASH castop pexpr [ STAR SLASH RPAREN ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PERCENT castop pexpr [ STAR SLASH RPAREN ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . AMP castop pexpr [ STAR SLASH RPAREN ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PIPE castop pexpr [ STAR SLASH RPAREN ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . HAT castop pexpr [ STAR SLASH RPAREN ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . LTLT castop pexpr [ STAR SLASH RPAREN ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . GTGT castop pexpr [ STAR SLASH RPAREN ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . ROR castop pexpr [ STAR SLASH RPAREN ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . ROL castop pexpr [ STAR SLASH RPAREN ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . EQEQ castop pexpr [ STAR SLASH RPAREN ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . BANGEQ castop pexpr [ STAR SLASH RPAREN ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . LT castop pexpr [ STAR SLASH RPAREN ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . LE castop pexpr [ STAR SLASH RPAREN ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . GT castop pexpr [ STAR SLASH RPAREN ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . GE castop pexpr [ STAR SLASH RPAREN ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . QUESTIONMARK pexpr COLON pexpr [ STAR SLASH RPAREN ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pinstr_r -> WHILE option(pblock) LPAREN pexpr . RPAREN [ WHILE UNDERSCORE STACK SHARP RETURN REG RBRACE QUESTIONMARK NID LPAREN LBRACKET INLINE IF GLOBAL FOR ARRAYINIT ]
## pinstr_r -> WHILE option(pblock) LPAREN pexpr . RPAREN pblock [ WHILE UNDERSCORE STACK SHARP RETURN REG RBRACE QUESTIONMARK NID LPAREN LBRACKET INLINE IF GLOBAL FOR ARRAYINIT ]
##
## The known suffix of the stack is as follows:
## WHILE option(pblock) LPAREN pexpr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: FN NID LPAREN RPAREN LBRACE WHILE LPAREN NID RPAREN T_U8
##
## Ends in an error in state: 273.
##
## pinstr_r -> WHILE option(pblock) LPAREN pexpr RPAREN . [ WHILE UNDERSCORE STACK SHARP RETURN REG RBRACE QUESTIONMARK NID LPAREN LBRACKET INLINE IF GLOBAL FOR ARRAYINIT ]
## pinstr_r -> WHILE option(pblock) LPAREN pexpr RPAREN . pblock [ WHILE UNDERSCORE STACK SHARP RETURN REG RBRACE QUESTIONMARK NID LPAREN LBRACKET INLINE IF GLOBAL FOR ARRAYINIT ]
##
## The known suffix of the stack is as follows:
## WHILE option(pblock) LPAREN pexpr RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: FN NID LPAREN RPAREN LBRACE QUESTIONMARK WHILE
##
## Ends in an error in state: 276.
##
## implicites -> QUESTIONMARK . LBRACE struct_annot RBRACE [ STAR SLASH ROR ROL PLUS PIPE PERCENT MINUS LTLT HAT GTGT EQ COMMA AMP ]
##
## The known suffix of the stack is as follows:
## QUESTIONMARK
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: FN NID LPAREN RPAREN LBRACE QUESTIONMARK LBRACE WHILE
##
## Ends in an error in state: 277.
##
## implicites -> QUESTIONMARK LBRACE . struct_annot RBRACE [ STAR SLASH ROR ROL PLUS PIPE PERCENT MINUS LTLT HAT GTGT EQ COMMA AMP ]
##
## The known suffix of the stack is as follows:
## QUESTIONMARK LBRACE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: FN NID LPAREN RPAREN LBRACE QUESTIONMARK LBRACE EXPORT RBRACKET
##
## Ends in an error in state: 278.
##
## implicites -> QUESTIONMARK LBRACE struct_annot . RBRACE [ STAR SLASH ROR ROL PLUS PIPE PERCENT MINUS LTLT HAT GTGT EQ COMMA AMP ]
##
## The known suffix of the stack is as follows:
## QUESTIONMARK LBRACE struct_annot
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 22, spurious reduction of production option(attribute) ->
## In state 39, spurious reduction of production annotation -> annotationlabel option(attribute)
## In state 31, spurious reduction of production separated_nonempty_list(COMMA,annotation) -> annotation
## In state 19, spurious reduction of production loption(separated_nonempty_list(COMMA,annotation)) -> separated_nonempty_list(COMMA,annotation)
## In state 20, spurious reduction of production struct_annot -> loption(separated_nonempty_list(COMMA,annotation))
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: FN NID LPAREN RPAREN LBRACE LPAREN WHILE
##
## Ends in an error in state: 280.
##
## option(parens(utype)) -> LPAREN . utype RPAREN [ LBRACKET ]
## plvalues -> LPAREN . separated_nonempty_list(COMMA,plvalue) RPAREN [ STAR SLASH ROR ROL PLUS PIPE PERCENT MINUS LTLT HAT GTGT EQ AMP ]
## plvalues -> LPAREN . RPAREN [ STAR SLASH ROR ROL PLUS PIPE PERCENT MINUS LTLT HAT GTGT EQ AMP ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: FN NID LPAREN RPAREN LBRACE LPAREN LPAREN WHILE
##
## Ends in an error in state: 282.
##
## option(parens(utype)) -> LPAREN . utype RPAREN [ LBRACKET ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: FN NID LPAREN RPAREN LBRACE LPAREN NID WHILE
##
## Ends in an error in state: 283.
##
## plvalue_r -> var . [ STAR SLASH RPAREN ROR ROL PLUS PIPE PERCENT MINUS LTLT HAT GTGT EQ COMMA AMP ]
## plvalue_r -> var . arr_access [ STAR SLASH RPAREN ROR ROL PLUS PIPE PERCENT MINUS LTLT HAT GTGT EQ COMMA AMP ]
##
## The known suffix of the stack is as follows:
## var
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: FN NID LPAREN RPAREN LBRACE LPAREN NID STAR
##
## Ends in an error in state: 285.
##
## plvalues -> LPAREN separated_nonempty_list(COMMA,plvalue) . RPAREN [ STAR SLASH ROR ROL PLUS PIPE PERCENT MINUS LTLT HAT GTGT EQ AMP ]
##
## The known suffix of the stack is as follows:
## LPAREN separated_nonempty_list(COMMA,plvalue)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 283, spurious reduction of production plvalue_r -> var
## In state 287, spurious reduction of production plvalue -> plvalue_r
## In state 288, spurious reduction of production separated_nonempty_list(COMMA,plvalue) -> plvalue
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: FN NID LPAREN RPAREN LBRACE UNDERSCORE WHILE
##
## Ends in an error in state: 288.
##
## separated_nonempty_list(COMMA,plvalue) -> plvalue . [ STAR SLASH RPAREN ROR ROL PLUS PIPE PERCENT MINUS LTLT HAT GTGT EQ AMP ]
## separated_nonempty_list(COMMA,plvalue) -> plvalue . COMMA separated_nonempty_list(COMMA,plvalue) [ STAR SLASH RPAREN ROR ROL PLUS PIPE PERCENT MINUS LTLT HAT GTGT EQ AMP ]
##
## The known suffix of the stack is as follows:
## plvalue
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: FN NID LPAREN RPAREN LBRACE NID COMMA WHILE
##
## Ends in an error in state: 289.
##
## separated_nonempty_list(COMMA,plvalue) -> plvalue COMMA . separated_nonempty_list(COMMA,plvalue) [ STAR SLASH RPAREN ROR ROL PLUS PIPE PERCENT MINUS LTLT HAT GTGT EQ AMP ]
##
## The known suffix of the stack is as follows:
## plvalue COMMA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: FN NID LPAREN RPAREN LBRACE LPAREN T_U128 RPAREN WHILE
##
## Ends in an error in state: 291.
##
## plvalue_r -> option(parens(utype)) . LBRACKET var option(mem_ofs) RBRACKET [ STAR SLASH RPAREN ROR ROL PLUS PIPE PERCENT MINUS LTLT HAT GTGT EQ COMMA AMP ]
##
## The known suffix of the stack is as follows:
## option(parens(utype))
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: FN NID LPAREN RPAREN LBRACE LBRACKET WHILE
##
## Ends in an error in state: 292.
##
## plvalue_r -> option(parens(utype)) LBRACKET . var option(mem_ofs) RBRACKET [ STAR SLASH RPAREN ROR ROL PLUS PIPE PERCENT MINUS LTLT HAT GTGT EQ COMMA AMP ]
##
## The known suffix of the stack is as follows:
## option(parens(utype)) LBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: FN NID LPAREN RPAREN LBRACE LBRACKET NID WHILE
##
## Ends in an error in state: 293.
##
## plvalue_r -> option(parens(utype)) LBRACKET var . option(mem_ofs) RBRACKET [ STAR SLASH RPAREN ROR ROL PLUS PIPE PERCENT MINUS LTLT HAT GTGT EQ COMMA AMP ]
##
## The known suffix of the stack is as follows:
## option(parens(utype)) LBRACKET var
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: FN NID LPAREN RPAREN LBRACE IF WHILE
##
## Ends in an error in state: 296.
##
## pif -> IF . pexpr pblock [ WHILE UNDERSCORE STACK SHARP RETURN REG RBRACE QUESTIONMARK NID LPAREN LBRACKET INLINE IF GLOBAL FOR ARRAYINIT ]
## pif -> IF . pexpr pblock ELSE pelse [ WHILE UNDERSCORE STACK SHARP RETURN REG RBRACE QUESTIONMARK NID LPAREN LBRACKET INLINE IF GLOBAL FOR ARRAYINIT ]
##
## The known suffix of the stack is as follows:
## IF
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: FN NID LPAREN RPAREN LBRACE IF FALSE WHILE
##
## Ends in an error in state: 297.
##
## pexpr_r -> pexpr . AMPAMP pexpr [ STAR SLASH ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PIPEPIPE pexpr [ STAR SLASH ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PLUS castop pexpr [ STAR SLASH ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . MINUS castop pexpr [ STAR SLASH ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . STAR castop pexpr [ STAR SLASH ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . SLASH castop pexpr [ STAR SLASH ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PERCENT castop pexpr [ STAR SLASH ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . AMP castop pexpr [ STAR SLASH ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PIPE castop pexpr [ STAR SLASH ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . HAT castop pexpr [ STAR SLASH ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . LTLT castop pexpr [ STAR SLASH ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . GTGT castop pexpr [ STAR SLASH ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . ROR castop pexpr [ STAR SLASH ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . ROL castop pexpr [ STAR SLASH ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . EQEQ castop pexpr [ STAR SLASH ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . BANGEQ castop pexpr [ STAR SLASH ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . LT castop pexpr [ STAR SLASH ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . LE castop pexpr [ STAR SLASH ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . GT castop pexpr [ STAR SLASH ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . GE castop pexpr [ STAR SLASH ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . QUESTIONMARK pexpr COLON pexpr [ STAR SLASH ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pif -> IF pexpr . pblock [ WHILE UNDERSCORE STACK SHARP RETURN REG RBRACE QUESTIONMARK NID LPAREN LBRACKET INLINE IF GLOBAL FOR ARRAYINIT ]
## pif -> IF pexpr . pblock ELSE pelse [ WHILE UNDERSCORE STACK SHARP RETURN REG RBRACE QUESTIONMARK NID LPAREN LBRACKET INLINE IF GLOBAL FOR ARRAYINIT ]
##
## The known suffix of the stack is as follows:
## IF pexpr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: FN NID LPAREN RPAREN LBRACE IF NID LBRACE RBRACE T_U8
##
## Ends in an error in state: 298.
##
## pif -> IF pexpr pblock . [ WHILE UNDERSCORE STACK SHARP RETURN REG RBRACE QUESTIONMARK NID LPAREN LBRACKET INLINE IF GLOBAL FOR ARRAYINIT ]
## pif -> IF pexpr pblock . ELSE pelse [ WHILE UNDERSCORE STACK SHARP RETURN REG RBRACE QUESTIONMARK NID LPAREN LBRACKET INLINE IF GLOBAL FOR ARRAYINIT ]
##
## The known suffix of the stack is as follows:
## IF pexpr pblock
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: FN NID LPAREN RPAREN LBRACE IF NID LBRACE RBRACE ELSE WHILE
##
## Ends in an error in state: 299.
##
## pif -> IF pexpr pblock ELSE . pelse [ WHILE UNDERSCORE STACK SHARP RETURN REG RBRACE QUESTIONMARK NID LPAREN LBRACKET INLINE IF GLOBAL FOR ARRAYINIT ]
##
## The known suffix of the stack is as follows:
## IF pexpr pblock ELSE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: FN NID LPAREN RPAREN LBRACE FOR WHILE
##
## Ends in an error in state: 304.
##
## pinstr_r -> FOR . var EQ pexpr TO pexpr pblock [ WHILE UNDERSCORE STACK SHARP RETURN REG RBRACE QUESTIONMARK NID LPAREN LBRACKET INLINE IF GLOBAL FOR ARRAYINIT ]
## pinstr_r -> FOR . var EQ pexpr DOWNTO pexpr pblock [ WHILE UNDERSCORE STACK SHARP RETURN REG RBRACE QUESTIONMARK NID LPAREN LBRACKET INLINE IF GLOBAL FOR ARRAYINIT ]
##
## The known suffix of the stack is as follows:
## FOR
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: FN NID LPAREN RPAREN LBRACE FOR NID WHILE
##
## Ends in an error in state: 305.
##
## pinstr_r -> FOR var . EQ pexpr TO pexpr pblock [ WHILE UNDERSCORE STACK SHARP RETURN REG RBRACE QUESTIONMARK NID LPAREN LBRACKET INLINE IF GLOBAL FOR ARRAYINIT ]
## pinstr_r -> FOR var . EQ pexpr DOWNTO pexpr pblock [ WHILE UNDERSCORE STACK SHARP RETURN REG RBRACE QUESTIONMARK NID LPAREN LBRACKET INLINE IF GLOBAL FOR ARRAYINIT ]
##
## The known suffix of the stack is as follows:
## FOR var
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: FN NID LPAREN RPAREN LBRACE FOR NID EQ WHILE
##
## Ends in an error in state: 306.
##
## pinstr_r -> FOR var EQ . pexpr TO pexpr pblock [ WHILE UNDERSCORE STACK SHARP RETURN REG RBRACE QUESTIONMARK NID LPAREN LBRACKET INLINE IF GLOBAL FOR ARRAYINIT ]
## pinstr_r -> FOR var EQ . pexpr DOWNTO pexpr pblock [ WHILE UNDERSCORE STACK SHARP RETURN REG RBRACE QUESTIONMARK NID LPAREN LBRACKET INLINE IF GLOBAL FOR ARRAYINIT ]
##
## The known suffix of the stack is as follows:
## FOR var EQ
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: FN NID LPAREN RPAREN LBRACE FOR NID EQ FALSE WHILE
##
## Ends in an error in state: 307.
##
## pexpr_r -> pexpr . AMPAMP pexpr [ TO STAR SLASH ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ DOWNTO BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PIPEPIPE pexpr [ TO STAR SLASH ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ DOWNTO BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PLUS castop pexpr [ TO STAR SLASH ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ DOWNTO BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . MINUS castop pexpr [ TO STAR SLASH ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ DOWNTO BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . STAR castop pexpr [ TO STAR SLASH ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ DOWNTO BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . SLASH castop pexpr [ TO STAR SLASH ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ DOWNTO BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PERCENT castop pexpr [ TO STAR SLASH ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ DOWNTO BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . AMP castop pexpr [ TO STAR SLASH ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ DOWNTO BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PIPE castop pexpr [ TO STAR SLASH ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ DOWNTO BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . HAT castop pexpr [ TO STAR SLASH ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ DOWNTO BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . LTLT castop pexpr [ TO STAR SLASH ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ DOWNTO BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . GTGT castop pexpr [ TO STAR SLASH ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ DOWNTO BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . ROR castop pexpr [ TO STAR SLASH ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ DOWNTO BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . ROL castop pexpr [ TO STAR SLASH ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ DOWNTO BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . EQEQ castop pexpr [ TO STAR SLASH ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ DOWNTO BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . BANGEQ castop pexpr [ TO STAR SLASH ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ DOWNTO BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . LT castop pexpr [ TO STAR SLASH ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ DOWNTO BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . LE castop pexpr [ TO STAR SLASH ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ DOWNTO BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . GT castop pexpr [ TO STAR SLASH ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ DOWNTO BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . GE castop pexpr [ TO STAR SLASH ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ DOWNTO BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . QUESTIONMARK pexpr COLON pexpr [ TO STAR SLASH ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ DOWNTO BANGEQ AMPAMP AMP ]
## pinstr_r -> FOR var EQ pexpr . TO pexpr pblock [ WHILE UNDERSCORE STACK SHARP RETURN REG RBRACE QUESTIONMARK NID LPAREN LBRACKET INLINE IF GLOBAL FOR ARRAYINIT ]
## pinstr_r -> FOR var EQ pexpr . DOWNTO pexpr pblock [ WHILE UNDERSCORE STACK SHARP RETURN REG RBRACE QUESTIONMARK NID LPAREN LBRACKET INLINE IF GLOBAL FOR ARRAYINIT ]
##
## The known suffix of the stack is as follows:
## FOR var EQ pexpr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: FN NID LPAREN RPAREN LBRACE FOR NID EQ NID TO WHILE
##
## Ends in an error in state: 308.
##
## pinstr_r -> FOR var EQ pexpr TO . pexpr pblock [ WHILE UNDERSCORE STACK SHARP RETURN REG RBRACE QUESTIONMARK NID LPAREN LBRACKET INLINE IF GLOBAL FOR ARRAYINIT ]
##
## The known suffix of the stack is as follows:
## FOR var EQ pexpr TO
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: FN NID LPAREN RPAREN LBRACE FOR NID EQ NID TO FALSE WHILE
##
## Ends in an error in state: 309.
##
## pexpr_r -> pexpr . AMPAMP pexpr [ STAR SLASH ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PIPEPIPE pexpr [ STAR SLASH ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PLUS castop pexpr [ STAR SLASH ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . MINUS castop pexpr [ STAR SLASH ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . STAR castop pexpr [ STAR SLASH ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . SLASH castop pexpr [ STAR SLASH ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PERCENT castop pexpr [ STAR SLASH ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . AMP castop pexpr [ STAR SLASH ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PIPE castop pexpr [ STAR SLASH ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . HAT castop pexpr [ STAR SLASH ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . LTLT castop pexpr [ STAR SLASH ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . GTGT castop pexpr [ STAR SLASH ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . ROR castop pexpr [ STAR SLASH ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . ROL castop pexpr [ STAR SLASH ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . EQEQ castop pexpr [ STAR SLASH ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . BANGEQ castop pexpr [ STAR SLASH ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . LT castop pexpr [ STAR SLASH ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . LE castop pexpr [ STAR SLASH ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . GT castop pexpr [ STAR SLASH ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . GE castop pexpr [ STAR SLASH ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . QUESTIONMARK pexpr COLON pexpr [ STAR SLASH ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pinstr_r -> FOR var EQ pexpr TO pexpr . pblock [ WHILE UNDERSCORE STACK SHARP RETURN REG RBRACE QUESTIONMARK NID LPAREN LBRACKET INLINE IF GLOBAL FOR ARRAYINIT ]
##
## The known suffix of the stack is as follows:
## FOR var EQ pexpr TO pexpr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: FN NID LPAREN RPAREN LBRACE FOR NID EQ NID DOWNTO WHILE
##
## Ends in an error in state: 311.
##
## pinstr_r -> FOR var EQ pexpr DOWNTO . pexpr pblock [ WHILE UNDERSCORE STACK SHARP RETURN REG RBRACE QUESTIONMARK NID LPAREN LBRACKET INLINE IF GLOBAL FOR ARRAYINIT ]
##
## The known suffix of the stack is as follows:
## FOR var EQ pexpr DOWNTO
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: FN NID LPAREN RPAREN LBRACE FOR NID EQ NID DOWNTO FALSE WHILE
##
## Ends in an error in state: 312.
##
## pexpr_r -> pexpr . AMPAMP pexpr [ STAR SLASH ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PIPEPIPE pexpr [ STAR SLASH ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PLUS castop pexpr [ STAR SLASH ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . MINUS castop pexpr [ STAR SLASH ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . STAR castop pexpr [ STAR SLASH ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . SLASH castop pexpr [ STAR SLASH ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PERCENT castop pexpr [ STAR SLASH ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . AMP castop pexpr [ STAR SLASH ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PIPE castop pexpr [ STAR SLASH ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . HAT castop pexpr [ STAR SLASH ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . LTLT castop pexpr [ STAR SLASH ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . GTGT castop pexpr [ STAR SLASH ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . ROR castop pexpr [ STAR SLASH ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . ROL castop pexpr [ STAR SLASH ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . EQEQ castop pexpr [ STAR SLASH ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . BANGEQ castop pexpr [ STAR SLASH ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . LT castop pexpr [ STAR SLASH ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . LE castop pexpr [ STAR SLASH ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . GT castop pexpr [ STAR SLASH ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . GE castop pexpr [ STAR SLASH ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . QUESTIONMARK pexpr COLON pexpr [ STAR SLASH ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE LBRACE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pinstr_r -> FOR var EQ pexpr DOWNTO pexpr . pblock [ WHILE UNDERSCORE STACK SHARP RETURN REG RBRACE QUESTIONMARK NID LPAREN LBRACKET INLINE IF GLOBAL FOR ARRAYINIT ]
##
## The known suffix of the stack is as follows:
## FOR var EQ pexpr DOWNTO pexpr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: FN NID LPAREN RPAREN LBRACE ARRAYINIT WHILE
##
## Ends in an error in state: 314.
##
## pinstr_r -> ARRAYINIT . LPAREN var RPAREN SEMICOLON [ WHILE UNDERSCORE STACK SHARP RETURN REG RBRACE QUESTIONMARK NID LPAREN LBRACKET INLINE IF GLOBAL FOR ARRAYINIT ]
##
## The known suffix of the stack is as follows:
## ARRAYINIT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: FN NID LPAREN RPAREN LBRACE ARRAYINIT LPAREN WHILE
##
## Ends in an error in state: 315.
##
## pinstr_r -> ARRAYINIT LPAREN . var RPAREN SEMICOLON [ WHILE UNDERSCORE STACK SHARP RETURN REG RBRACE QUESTIONMARK NID LPAREN LBRACKET INLINE IF GLOBAL FOR ARRAYINIT ]
##
## The known suffix of the stack is as follows:
## ARRAYINIT LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: FN NID LPAREN RPAREN LBRACE ARRAYINIT LPAREN NID WHILE
##
## Ends in an error in state: 316.
##
## pinstr_r -> ARRAYINIT LPAREN var . RPAREN SEMICOLON [ WHILE UNDERSCORE STACK SHARP RETURN REG RBRACE QUESTIONMARK NID LPAREN LBRACKET INLINE IF GLOBAL FOR ARRAYINIT ]
##
## The known suffix of the stack is as follows:
## ARRAYINIT LPAREN var
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: FN NID LPAREN RPAREN LBRACE ARRAYINIT LPAREN NID RPAREN WHILE
##
## Ends in an error in state: 317.
##
## pinstr_r -> ARRAYINIT LPAREN var RPAREN . SEMICOLON [ WHILE UNDERSCORE STACK SHARP RETURN REG RBRACE QUESTIONMARK NID LPAREN LBRACKET INLINE IF GLOBAL FOR ARRAYINIT ]
##
## The known suffix of the stack is as follows:
## ARRAYINIT LPAREN var RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: FN NID LPAREN RPAREN LBRACE NID WHILE
##
## Ends in an error in state: 319.
##
## pinstr_r -> var . LPAREN loption(separated_nonempty_list(COMMA,pexpr)) RPAREN option(prefix(IF,pexpr)) SEMICOLON [ WHILE UNDERSCORE STACK SHARP RETURN REG RBRACE QUESTIONMARK NID LPAREN LBRACKET INLINE IF GLOBAL FOR ARRAYINIT ]
## plvalue_r -> var . [ STAR SLASH ROR ROL PLUS PIPE PERCENT MINUS LTLT HAT GTGT EQ COMMA AMP ]
## plvalue_r -> var . arr_access [ STAR SLASH ROR ROL PLUS PIPE PERCENT MINUS LTLT HAT GTGT EQ COMMA AMP ]
##
## The known suffix of the stack is as follows:
## var
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: FN NID LPAREN RPAREN LBRACE NID LPAREN WHILE
##
## Ends in an error in state: 320.
##
## pinstr_r -> var LPAREN . loption(separated_nonempty_list(COMMA,pexpr)) RPAREN option(prefix(IF,pexpr)) SEMICOLON [ WHILE UNDERSCORE STACK SHARP RETURN REG RBRACE QUESTIONMARK NID LPAREN LBRACKET INLINE IF GLOBAL FOR ARRAYINIT ]
##
## The known suffix of the stack is as follows:
## var LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: FN NID LPAREN RPAREN LBRACE NID LPAREN NID RBRACKET
##
## Ends in an error in state: 321.
##
## pinstr_r -> var LPAREN loption(separated_nonempty_list(COMMA,pexpr)) . RPAREN option(prefix(IF,pexpr)) SEMICOLON [ WHILE UNDERSCORE STACK SHARP RETURN REG RBRACE QUESTIONMARK NID LPAREN LBRACKET INLINE IF GLOBAL FOR ARRAYINIT ]
##
## The known suffix of the stack is as follows:
## var LPAREN loption(separated_nonempty_list(COMMA,pexpr))
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 63, spurious reduction of production pexpr_r -> var
## In state 68, spurious reduction of production pexpr -> pexpr_r
## In state 69, spurious reduction of production separated_nonempty_list(COMMA,pexpr) -> pexpr
## In state 65, spurious reduction of production loption(separated_nonempty_list(COMMA,pexpr)) -> separated_nonempty_list(COMMA,pexpr)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: FN NID LPAREN RPAREN LBRACE NID LPAREN RPAREN WHILE
##
## Ends in an error in state: 322.
##
## pinstr_r -> var LPAREN loption(separated_nonempty_list(COMMA,pexpr)) RPAREN . option(prefix(IF,pexpr)) SEMICOLON [ WHILE UNDERSCORE STACK SHARP RETURN REG RBRACE QUESTIONMARK NID LPAREN LBRACKET INLINE IF GLOBAL FOR ARRAYINIT ]
##
## The known suffix of the stack is as follows:
## var LPAREN loption(separated_nonempty_list(COMMA,pexpr)) RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: FN NID LPAREN RPAREN LBRACE NID EQ NID IF WHILE
##
## Ends in an error in state: 323.
##
## option(prefix(IF,pexpr)) -> IF . pexpr [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## IF
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: FN NID LPAREN RPAREN LBRACE NID EQ NID IF FALSE WHILE
##
## Ends in an error in state: 324.
##
## option(prefix(IF,pexpr)) -> IF pexpr . [ SEMICOLON ]
## pexpr_r -> pexpr . AMPAMP pexpr [ STAR SLASH SEMICOLON ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PIPEPIPE pexpr [ STAR SLASH SEMICOLON ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PLUS castop pexpr [ STAR SLASH SEMICOLON ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . MINUS castop pexpr [ STAR SLASH SEMICOLON ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . STAR castop pexpr [ STAR SLASH SEMICOLON ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . SLASH castop pexpr [ STAR SLASH SEMICOLON ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PERCENT castop pexpr [ STAR SLASH SEMICOLON ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . AMP castop pexpr [ STAR SLASH SEMICOLON ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PIPE castop pexpr [ STAR SLASH SEMICOLON ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . HAT castop pexpr [ STAR SLASH SEMICOLON ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . LTLT castop pexpr [ STAR SLASH SEMICOLON ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . GTGT castop pexpr [ STAR SLASH SEMICOLON ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . ROR castop pexpr [ STAR SLASH SEMICOLON ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . ROL castop pexpr [ STAR SLASH SEMICOLON ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . EQEQ castop pexpr [ STAR SLASH SEMICOLON ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . BANGEQ castop pexpr [ STAR SLASH SEMICOLON ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . LT castop pexpr [ STAR SLASH SEMICOLON ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . LE castop pexpr [ STAR SLASH SEMICOLON ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . GT castop pexpr [ STAR SLASH SEMICOLON ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . GE castop pexpr [ STAR SLASH SEMICOLON ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . QUESTIONMARK pexpr COLON pexpr [ STAR SLASH SEMICOLON ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## IF pexpr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: FN NID LPAREN RPAREN LBRACE GLOBAL T_BOOL WHILE
##
## Ends in an error in state: 327.
##
## pinstr_r -> stor_type . separated_nonempty_list(option(COMMA),var) SEMICOLON [ WHILE UNDERSCORE STACK SHARP RETURN REG RBRACE QUESTIONMARK NID LPAREN LBRACKET INLINE IF GLOBAL FOR ARRAYINIT ]
##
## The known suffix of the stack is as follows:
## stor_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: FN NID LPAREN RPAREN LBRACE GLOBAL T_U128 NID WHILE
##
## Ends in an error in state: 328.
##
## separated_nonempty_list(option(COMMA),var) -> var . [ SEMICOLON ]
## separated_nonempty_list(option(COMMA),var) -> var . option(COMMA) separated_nonempty_list(option(COMMA),var) [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## var
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: FN NID LPAREN RPAREN LBRACE GLOBAL T_U128 NID COMMA WHILE
##
## Ends in an error in state: 330.
##
## separated_nonempty_list(option(COMMA),var) -> var option(COMMA) . separated_nonempty_list(option(COMMA),var) [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## var option(COMMA)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: FN NID LPAREN RPAREN LBRACE UNDERSCORE RPAREN
##
## Ends in an error in state: 335.
##
## pinstr_r -> plvalues . peqop pexpr option(prefix(IF,pexpr)) SEMICOLON [ WHILE UNDERSCORE STACK SHARP RETURN REG RBRACE QUESTIONMARK NID LPAREN LBRACKET INLINE IF GLOBAL FOR ARRAYINIT ]
##
## The known suffix of the stack is as follows:
## plvalues
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 288, spurious reduction of production separated_nonempty_list(COMMA,plvalue) -> plvalue
## In state 334, spurious reduction of production plvalues -> separated_nonempty_list(COMMA,plvalue)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: FN NID LPAREN RPAREN LBRACE NID STAR WHILE
##
## Ends in an error in state: 336.
##
## peqop -> STAR . castop EQ [ TRUE SHARP NID MINUS LPAREN LBRACKET INT FALSE BANG ]
##
## The known suffix of the stack is as follows:
## STAR
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: FN NID LPAREN RPAREN LBRACE NID STAR SVSIZE WHILE
##
## Ends in an error in state: 337.
##
## peqop -> STAR castop . EQ [ TRUE SHARP NID MINUS LPAREN LBRACKET INT FALSE BANG ]
##
## The known suffix of the stack is as follows:
## STAR castop
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: FN NID LPAREN RPAREN LBRACE NID SLASH WHILE
##
## Ends in an error in state: 339.
##
## peqop -> SLASH . castop EQ [ TRUE SHARP NID MINUS LPAREN LBRACKET INT FALSE BANG ]
##
## The known suffix of the stack is as follows:
## SLASH
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: FN NID LPAREN RPAREN LBRACE NID SLASH SVSIZE WHILE
##
## Ends in an error in state: 340.
##
## peqop -> SLASH castop . EQ [ TRUE SHARP NID MINUS LPAREN LBRACKET INT FALSE BANG ]
##
## The known suffix of the stack is as follows:
## SLASH castop
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: FN NID LPAREN RPAREN LBRACE NID ROR WHILE
##
## Ends in an error in state: 342.
##
## peqop -> ROR . castop EQ [ TRUE SHARP NID MINUS LPAREN LBRACKET INT FALSE BANG ]
##
## The known suffix of the stack is as follows:
## ROR
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: FN NID LPAREN RPAREN LBRACE NID ROR SVSIZE WHILE
##
## Ends in an error in state: 343.
##
## peqop -> ROR castop . EQ [ TRUE SHARP NID MINUS LPAREN LBRACKET INT FALSE BANG ]
##
## The known suffix of the stack is as follows:
## ROR castop
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: FN NID LPAREN RPAREN LBRACE NID ROL WHILE
##
## Ends in an error in state: 345.
##
## peqop -> ROL . castop EQ [ TRUE SHARP NID MINUS LPAREN LBRACKET INT FALSE BANG ]
##
## The known suffix of the stack is as follows:
## ROL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: FN NID LPAREN RPAREN LBRACE NID ROL SVSIZE WHILE
##
## Ends in an error in state: 346.
##
## peqop -> ROL castop . EQ [ TRUE SHARP NID MINUS LPAREN LBRACKET INT FALSE BANG ]
##
## The known suffix of the stack is as follows:
## ROL castop
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: FN NID LPAREN RPAREN LBRACE NID PLUS WHILE
##
## Ends in an error in state: 348.
##
## peqop -> PLUS . castop EQ [ TRUE SHARP NID MINUS LPAREN LBRACKET INT FALSE BANG ]
##
## The known suffix of the stack is as follows:
## PLUS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: FN NID LPAREN RPAREN LBRACE NID PLUS SVSIZE WHILE
##
## Ends in an error in state: 349.
##
## peqop -> PLUS castop . EQ [ TRUE SHARP NID MINUS LPAREN LBRACKET INT FALSE BANG ]
##
## The known suffix of the stack is as follows:
## PLUS castop
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: FN NID LPAREN RPAREN LBRACE NID PIPE WHILE
##
## Ends in an error in state: 351.
##
## peqop -> PIPE . castop EQ [ TRUE SHARP NID MINUS LPAREN LBRACKET INT FALSE BANG ]
##
## The known suffix of the stack is as follows:
## PIPE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: FN NID LPAREN RPAREN LBRACE NID PIPE SVSIZE WHILE
##
## Ends in an error in state: 352.
##
## peqop -> PIPE castop . EQ [ TRUE SHARP NID MINUS LPAREN LBRACKET INT FALSE BANG ]
##
## The known suffix of the stack is as follows:
## PIPE castop
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: FN NID LPAREN RPAREN LBRACE NID PERCENT WHILE
##
## Ends in an error in state: 354.
##
## peqop -> PERCENT . castop EQ [ TRUE SHARP NID MINUS LPAREN LBRACKET INT FALSE BANG ]
##
## The known suffix of the stack is as follows:
## PERCENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: FN NID LPAREN RPAREN LBRACE NID PERCENT SVSIZE WHILE
##
## Ends in an error in state: 355.
##
## peqop -> PERCENT castop . EQ [ TRUE SHARP NID MINUS LPAREN LBRACKET INT FALSE BANG ]
##
## The known suffix of the stack is as follows:
## PERCENT castop
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: FN NID LPAREN RPAREN LBRACE NID MINUS WHILE
##
## Ends in an error in state: 357.
##
## peqop -> MINUS . castop EQ [ TRUE SHARP NID MINUS LPAREN LBRACKET INT FALSE BANG ]
##
## The known suffix of the stack is as follows:
## MINUS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: FN NID LPAREN RPAREN LBRACE NID MINUS SVSIZE WHILE
##
## Ends in an error in state: 358.
##
## peqop -> MINUS castop . EQ [ TRUE SHARP NID MINUS LPAREN LBRACKET INT FALSE BANG ]
##
## The known suffix of the stack is as follows:
## MINUS castop
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: FN NID LPAREN RPAREN LBRACE NID LTLT WHILE
##
## Ends in an error in state: 360.
##
## peqop -> LTLT . castop EQ [ TRUE SHARP NID MINUS LPAREN LBRACKET INT FALSE BANG ]
##
## The known suffix of the stack is as follows:
## LTLT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: FN NID LPAREN RPAREN LBRACE NID LTLT SVSIZE WHILE
##
## Ends in an error in state: 361.
##
## peqop -> LTLT castop . EQ [ TRUE SHARP NID MINUS LPAREN LBRACKET INT FALSE BANG ]
##
## The known suffix of the stack is as follows:
## LTLT castop
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: FN NID LPAREN RPAREN LBRACE NID HAT WHILE
##
## Ends in an error in state: 363.
##
## peqop -> HAT . castop EQ [ TRUE SHARP NID MINUS LPAREN LBRACKET INT FALSE BANG ]
##
## The known suffix of the stack is as follows:
## HAT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: FN NID LPAREN RPAREN LBRACE NID HAT SVSIZE WHILE
##
## Ends in an error in state: 364.
##
## peqop -> HAT castop . EQ [ TRUE SHARP NID MINUS LPAREN LBRACKET INT FALSE BANG ]
##
## The known suffix of the stack is as follows:
## HAT castop
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: FN NID LPAREN RPAREN LBRACE NID GTGT WHILE
##
## Ends in an error in state: 366.
##
## peqop -> GTGT . castop EQ [ TRUE SHARP NID MINUS LPAREN LBRACKET INT FALSE BANG ]
##
## The known suffix of the stack is as follows:
## GTGT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: FN NID LPAREN RPAREN LBRACE NID GTGT SVSIZE WHILE
##
## Ends in an error in state: 367.
##
## peqop -> GTGT castop . EQ [ TRUE SHARP NID MINUS LPAREN LBRACKET INT FALSE BANG ]
##
## The known suffix of the stack is as follows:
## GTGT castop
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: FN NID LPAREN RPAREN LBRACE NID AMP WHILE
##
## Ends in an error in state: 370.
##
## peqop -> AMP . castop EQ [ TRUE SHARP NID MINUS LPAREN LBRACKET INT FALSE BANG ]
##
## The known suffix of the stack is as follows:
## AMP
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: FN NID LPAREN RPAREN LBRACE NID AMP SVSIZE WHILE
##
## Ends in an error in state: 371.
##
## peqop -> AMP castop . EQ [ TRUE SHARP NID MINUS LPAREN LBRACKET INT FALSE BANG ]
##
## The known suffix of the stack is as follows:
## AMP castop
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: FN NID LPAREN RPAREN LBRACE NID EQ WHILE
##
## Ends in an error in state: 373.
##
## pinstr_r -> plvalues peqop . pexpr option(prefix(IF,pexpr)) SEMICOLON [ WHILE UNDERSCORE STACK SHARP RETURN REG RBRACE QUESTIONMARK NID LPAREN LBRACKET INLINE IF GLOBAL FOR ARRAYINIT ]
##
## The known suffix of the stack is as follows:
## plvalues peqop
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: FN NID LPAREN RPAREN LBRACE NID EQ FALSE WHILE
##
## Ends in an error in state: 374.
##
## pexpr_r -> pexpr . AMPAMP pexpr [ STAR SLASH SEMICOLON ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE IF HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PIPEPIPE pexpr [ STAR SLASH SEMICOLON ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE IF HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PLUS castop pexpr [ STAR SLASH SEMICOLON ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE IF HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . MINUS castop pexpr [ STAR SLASH SEMICOLON ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE IF HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . STAR castop pexpr [ STAR SLASH SEMICOLON ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE IF HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . SLASH castop pexpr [ STAR SLASH SEMICOLON ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE IF HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PERCENT castop pexpr [ STAR SLASH SEMICOLON ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE IF HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . AMP castop pexpr [ STAR SLASH SEMICOLON ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE IF HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . PIPE castop pexpr [ STAR SLASH SEMICOLON ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE IF HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . HAT castop pexpr [ STAR SLASH SEMICOLON ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE IF HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . LTLT castop pexpr [ STAR SLASH SEMICOLON ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE IF HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . GTGT castop pexpr [ STAR SLASH SEMICOLON ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE IF HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . ROR castop pexpr [ STAR SLASH SEMICOLON ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE IF HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . ROL castop pexpr [ STAR SLASH SEMICOLON ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE IF HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . EQEQ castop pexpr [ STAR SLASH SEMICOLON ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE IF HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . BANGEQ castop pexpr [ STAR SLASH SEMICOLON ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE IF HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . LT castop pexpr [ STAR SLASH SEMICOLON ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE IF HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . LE castop pexpr [ STAR SLASH SEMICOLON ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE IF HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . GT castop pexpr [ STAR SLASH SEMICOLON ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE IF HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . GE castop pexpr [ STAR SLASH SEMICOLON ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE IF HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pexpr_r -> pexpr . QUESTIONMARK pexpr COLON pexpr [ STAR SLASH SEMICOLON ROR ROL QUESTIONMARK PLUS PIPEPIPE PIPE PERCENT MINUS LTLT LT LE IF HAT GTGT GT GE EQEQ BANGEQ AMPAMP AMP ]
## pinstr_r -> plvalues peqop pexpr . option(prefix(IF,pexpr)) SEMICOLON [ WHILE UNDERSCORE STACK SHARP RETURN REG RBRACE QUESTIONMARK NID LPAREN LBRACKET INLINE IF GLOBAL FOR ARRAYINIT ]
##
## The known suffix of the stack is as follows:
## plvalues peqop pexpr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: FN NID LPAREN RPAREN LBRACE QUESTIONMARK LBRACE RBRACE WHILE
##
## Ends in an error in state: 379.
##
## plvalues -> implicites . [ STAR SLASH ROR ROL PLUS PIPE PERCENT MINUS LTLT HAT GTGT EQ AMP ]
## plvalues -> implicites . COMMA separated_nonempty_list(COMMA,plvalue) [ STAR SLASH ROR ROL PLUS PIPE PERCENT MINUS LTLT HAT GTGT EQ AMP ]
##
## The known suffix of the stack is as follows:
## implicites
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: FN NID LPAREN RPAREN LBRACE QUESTIONMARK LBRACE RBRACE COMMA WHILE
##
## Ends in an error in state: 380.
##
## plvalues -> implicites COMMA . separated_nonempty_list(COMMA,plvalue) [ STAR SLASH ROR ROL PLUS PIPE PERCENT MINUS LTLT HAT GTGT EQ AMP ]
##
## The known suffix of the stack is as follows:
## implicites COMMA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: FN NID LPAREN RPAREN LBRACE RETURN WHILE
##
## Ends in an error in state: 383.
##
## option(__anonymous_1) -> RETURN . LPAREN loption(separated_nonempty_list(COMMA,var)) RPAREN SEMICOLON [ RBRACE ]
## option(__anonymous_1) -> RETURN . loption(separated_nonempty_list(COMMA,var)) SEMICOLON [ RBRACE ]
##
## The known suffix of the stack is as follows:
## RETURN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: FN NID LPAREN RPAREN LBRACE RETURN LPAREN WHILE
##
## Ends in an error in state: 384.
##
## option(__anonymous_1) -> RETURN LPAREN . loption(separated_nonempty_list(COMMA,var)) RPAREN SEMICOLON [ RBRACE ]
##
## The known suffix of the stack is as follows:
## RETURN LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: FN NID LPAREN RPAREN LBRACE RETURN NID WHILE
##
## Ends in an error in state: 385.
##
## separated_nonempty_list(COMMA,var) -> var . [ SEMICOLON RPAREN ]
## separated_nonempty_list(COMMA,var) -> var . COMMA separated_nonempty_list(COMMA,var) [ SEMICOLON RPAREN ]
##
## The known suffix of the stack is as follows:
## var
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: FN NID LPAREN RPAREN LBRACE RETURN NID COMMA WHILE
##
## Ends in an error in state: 386.
##
## separated_nonempty_list(COMMA,var) -> var COMMA . separated_nonempty_list(COMMA,var) [ SEMICOLON RPAREN ]
##
## The known suffix of the stack is as follows:
## var COMMA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: FN NID LPAREN RPAREN LBRACE RETURN LPAREN NID SEMICOLON
##
## Ends in an error in state: 389.
##
## option(__anonymous_1) -> RETURN LPAREN loption(separated_nonempty_list(COMMA,var)) . RPAREN SEMICOLON [ RBRACE ]
##
## The known suffix of the stack is as follows:
## RETURN LPAREN loption(separated_nonempty_list(COMMA,var))
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 385, spurious reduction of production separated_nonempty_list(COMMA,var) -> var
## In state 388, spurious reduction of production loption(separated_nonempty_list(COMMA,var)) -> separated_nonempty_list(COMMA,var)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: FN NID LPAREN RPAREN LBRACE RETURN LPAREN RPAREN WHILE
##
## Ends in an error in state: 390.
##
## option(__anonymous_1) -> RETURN LPAREN loption(separated_nonempty_list(COMMA,var)) RPAREN . SEMICOLON [ RBRACE ]
##
## The known suffix of the stack is as follows:
## RETURN LPAREN loption(separated_nonempty_list(COMMA,var)) RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: FN NID LPAREN RPAREN LBRACE RETURN NID RPAREN
##
## Ends in an error in state: 392.
##
## option(__anonymous_1) -> RETURN loption(separated_nonempty_list(COMMA,var)) . SEMICOLON [ RBRACE ]
##
## The known suffix of the stack is as follows:
## RETURN loption(separated_nonempty_list(COMMA,var))
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 385, spurious reduction of production separated_nonempty_list(COMMA,var) -> var
## In state 388, spurious reduction of production loption(separated_nonempty_list(COMMA,var)) -> separated_nonempty_list(COMMA,var)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: FN NID LPAREN RPAREN LBRACE RETURN SEMICOLON WHILE
##
## Ends in an error in state: 394.
##
## pfunbody -> LBRACE list(pinstr) option(__anonymous_1) . RBRACE [ T_U8 T_U64 T_U32 T_U256 T_U16 T_U128 T_INT T_BOOL SHARP REQUIRE PARAM INLINE FROM FN EXPORT EXEC EOF ]
##
## The known suffix of the stack is as follows:
## LBRACE list(pinstr) option(__anonymous_1)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: FN NID LPAREN SHARP EXPORT WHILE
##
## Ends in an error in state: 397.
##
## annot_pvardecl -> annotations . stor_type separated_nonempty_list(empty,var) [ RPAREN COMMA ]
##
## The known suffix of the stack is as follows:
## annotations
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 22, spurious reduction of production option(attribute) ->
## In state 39, spurious reduction of production annotation -> annotationlabel option(attribute)
## In state 41, spurious reduction of production top_annotation -> SHARP annotation
## In state 197, spurious reduction of production list(top_annotation) ->
## In state 198, spurious reduction of production list(top_annotation) -> top_annotation list(top_annotation)
## In state 220, spurious reduction of production annotations -> list(top_annotation)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: FN NID LPAREN GLOBAL T_BOOL WHILE
##
## Ends in an error in state: 398.
##
## annot_pvardecl -> annotations stor_type . separated_nonempty_list(empty,var) [ RPAREN COMMA ]
##
## The known suffix of the stack is as follows:
## annotations stor_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: FN NID LPAREN GLOBAL T_U128 NID WHILE
##
## Ends in an error in state: 399.
##
## separated_nonempty_list(empty,var) -> var . [ RPAREN COMMA ]
## separated_nonempty_list(empty,var) -> var . separated_nonempty_list(empty,var) [ RPAREN COMMA ]
##
## The known suffix of the stack is as follows:
## var
##

<YOUR SYNTAX ERROR MESSAGE HERE>

module_: FN NID LPAREN GLOBAL T_U128 NID COMMA WHILE
##
## Ends in an error in state: 403.
##
## separated_nonempty_list(COMMA,annot_pvardecl) -> annot_pvardecl COMMA . separated_nonempty_list(COMMA,annot_pvardecl) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## annot_pvardecl COMMA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

